<?xml version="1.0" encoding="UTF-8"?>

<!--
########### SVN repository information ###################
# $Date$
# $Author$
# $Revision$
# $HeadURL$
# $Id$
########### SVN repository information ###################

Purpose:
	This stylesheet is used to extract the specifications of 
	valid types categories from the NeXus Definition Language
	specifications into DocBook content for use in NXDL.xml.

Usage:
    xsltproc ../xslt/nxdl_units2docbook.xsl ../nxdlTypes.xsd > types.xml
-->

<xslt:stylesheet
	xmlns:xslt="http://www.w3.org/1999/XSL/Transform"
	version="1.0"
	xmlns:nxdl="http://definition.nexusformat.org/nxdl/3.1"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    >
    <xslt:output method="xml" indent="yes" version="1.0" encoding="UTF-8"/>

    <xslt:template match="/">
        <!-- Needs this on 2nd line of XML file: 
            <?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"?>
        -->
        <xslt:processing-instruction 
            name="oxygen">RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"</xslt:processing-instruction>
        <xslt:comment/><!-- tricks XSLT to start a new line -->


        <xslt:element name="section">
            <xslt:attribute name="xmlns">http://docbook.org/ns/docbook</xslt:attribute>
            <xslt:comment> auto-generated by a script </xslt:comment>
            <title>Documentation from the NXDL Schema</title>
            <para>The documentation in this section has been obtained directly 
                from the <code>nxdl.xsd</code> NXDL Schema.</para>
            <xslt:comment/><!-- tricks XSLT to start a new line -->
            <xslt:apply-templates select="/xsd:schema//xsd:simpleType" />
            <xslt:comment/><!-- tricks XSLT to start a new line -->
            <xslt:apply-templates select="/xsd:schema//xsd:complexType" />
            <xslt:comment/><!-- tricks XSLT to start a new line -->
        </xslt:element>

    </xslt:template>
    
    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    
    <xslt:template match="xsd:complexType|xsd:simpleType">
        <xslt:if test="count(@name)">
            <section>
                <title><xslt:value-of select="name()"/>: <xslt:value-of select="@name"/></title>
                <para><xslt:apply-templates select="xsd:annotation/xsd:documentation"/></para>
            </section>
        </xslt:if>
    </xslt:template>
    
    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    
    <xslt:template match="xsd:documentation">
        <!--<xsl:value-of select="."/>-->
        <!-- xmlns:db="http://docbook.org/ns/docbook" -->
        <xslt:apply-templates />
    </xslt:template>
    
    <!-- default rule: copy any node beneath <nx:doc> -->
    <!-- thanks to: http://stackoverflow.com/questions/1525285/xslt-mixed-content-node -->
    <xslt:template match="xsd:documentation//*">
        <xslt:copy>
            <xslt:copy-of select="@*" />
            <xslt:apply-templates />
        </xslt:copy>
    </xslt:template>

</xslt:stylesheet>

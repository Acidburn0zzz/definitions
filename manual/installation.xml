<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"?>
<!-- # $Id$ -->
<appendix xml:id="Installation" 
  version="5.0"
  xmlns="http://docbook.org/ns/docbook" 
  xmlns:xlink="http://www.w3.org/1999/xlink" 
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Installation</title>
  <para> This section descibes how to install the NeXus API and details the requirements. The NeXus
    API is distributed under the terms of the GNU Lesser Public License. <indexterm>
      <primary>installation</primary>
    </indexterm>
  </para>
  <section xml:id="Installation-Prerequisites">
    <title>Prerequisites</title>
    <section xml:id="Installation-Prerequisites-HDF">
      <title>HDF</title>
      <para><indexterm>
          <primary>HDF</primary>
        </indexterm> Since NeXus uses HDF as the underlying binary format, it is necessary first to
        install the HDF subroutine libraries and include files before installing the NeXus API. It
        is not usually necessary to download the HDF source code since precompiled object libraries
        exist for a variety of operating systems including Windows, Mac OS X, Linux, and various
        other flavors of Unix. Check the HDF web pages for more information: <link
          xlink:href="http://www.hdfgroup.org/"><literal>http://www.hdfgroup.org/</literal></link>
      </para>
      <para>Packages for HDF4 and HDF5 are available for both Fedora (hdf, hdf5, hdf-devel,
        hdf5-devel) and Ubuntu/Debian (libhdf4g, libhdf5).</para>
    </section>
    <section xml:id="Installation-Prerequisites-XML">
      <title>XML</title>
      <para><indexterm>
          <primary>XML</primary>
        </indexterm>Starting from version 3 of the NeXus API, you can also read and write NeXus
        files using XML as the underying format. This uses the Mini-XML library, developed by
        Michael Sweet, which is also available as a precompiled binary library for several operating
        systems. Please ensure that you install version 2.2.2 or later. Check the Mini-XML web pages
        for more information: <link xlink:href="http://www.minixml.org/"
            ><literal>http://www.minixml.org/</literal></link>
      </para>
      <para>Packages for MXML are available for both Fedora (mxml, mxml-devel) and Ubuntu/Debian
        (libmxml1).</para>
    </section>
    <section xml:id="Installation-Prerequisites-Other">
      <title>Other Software</title>
      <para>If you intend to build from source code, you will also need to have GNU
        Autotools.</para>
    </section>
    <section xml:id="Installation-Source">
      <title>NeXus Source Code Distribution</title>

      <para>Download the appropriate gzipped tar file, unpack it, and run the standard configure
        procedure from the resulting nexus directory. For example, for version 4.2.1;</para>
      <para><code>$ tar zxvf nexus-4.2.1.tar.gz</code></para>
      <para><code>$ cd nexus-4.2.1</code></para>
      <para><code>$ ./configure</code></para>
      <para><code>$ make</code></para>
      <para><code>$ make install</code></para>
      <para>To find out how to customize the installation, e.g., to choose different installation
        directories, type</para>
      <para><code>$ ./configure --help</code></para>
      <para>or, to change installation location from the default (/usr/local) area, using</para>
      <para><code>$ ./configure --without-java</code></para>
      <para>See the README file for further instructions.</para>
    </section>
    <section xml:id="Installation-Linux">
      <title>Linux RPM Distribution Kits</title>
      <para> A NeXus binary RPM (nexus-*.i386.rpm) contains ready compiled NeXus libraries whereas a
        source RPM (nexus-*.src.rpm) needs to be compiled into a binary RPM before it can be
        installed. In general, a binary RPM is installed using the command </para>
      <para><code>rpm -Uvh file.i386.rpm</code></para>
      <para>or, to change installation location from the default (e.g. /usr/local) area, using</para>
      <para><code>rpm -Uvh --prefix /alternative/directory file.i386.rpm</code></para>
      <para>If the binary RPMS are not the correct architecture for you (e.g. you need x86_64 rather
        than i386) or the binary RPM requires libraries (e.g. HDF4) that you do not have, you can
        instead rebuild a source RPM (.src.rpm) to generate the correct binary RPM for you machine.
        Download the source RPM file and then run</para>
      <para><code>rpmbuild --rebuild file.src.rpm</code></para>
      <para> This should generate a binary RPM file which you can install as above. Be careful if
        you think about specifying an alternative buildroot for rpmbuild by using
          <code>--buildroot</code> option as the "buildroot" directory tree will get remove (so
          <code>--buildroot</code> / is a really bad idea). Only change buildroot it if the default
        area turns out not to be big enough to compile the package. </para>
      <para>If you are using Fedora, then you can install all the dependencies by typing </para>
      <para><code>yum install hdf hdf-devel hdf5 hdf5-devel mxml mxml-devel</code></para>
    </section>
    <section xml:id="Installation-Windows">
      <title>Microsoft Windows Installation Kit</title>
      <para>A Windows MSI based installation kit is available and can be downloaded from:<link xlink:href="http://download.nexusformat.org/kits/windows/"
            ><literal>http://download.nexusformat.org/kits/windows/</literal></link></para>
    </section>    
    <section xml:id="Installation-MacOS">
      <title>Mac OS X Installation Kit</title>
      <para>A installation disk image (.dmg) can be downloaded from:<link xlink:href="http://download.nexusformat.org/kits/macosx/"
            ><literal>http://download.nexusformat.org/kits/macosx/</literal></link></para>
    </section>
    <section xml:id="Installation-Cygwin">
      <title>Cygwin Kits</title>
      <para>HDF4 is not supported under CYGWIN - both HDF5 and MXML are supported and can be
        downloaded and built as usual. When configuring HDF5 you should explicitly pass a prefix to
        the configure script to make sure the libraries are installed in a "usual" location
        i.e.</para>
      <para><code>./configure --prefix=/usr/local/hdf5</code></para>
      <para>Otherwise you will have to use the <code>--with-hdf5=/path/to/hdf5</code> option later when configuring NeXus to tell it where to look for hdf5.
        After building hdf5, configure and build NeXus using the instructions for source code distribution above.</para>
    </section>
  </section>
</appendix>

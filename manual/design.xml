<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"?>
<!-- # $Id$ -->
<chapter 
	version="5.0"
	xml:id="chap.design" 
    xmlns="http://docbook.org/ns/docbook" 
    xmlns:xlink="http://www.w3.org/1999/xlink" 
	xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>NeXus Design</title>
    <para>
        The structure of NeXus files is extremely flexible, allowing the storage both of
        simple data sets, such as a single data array and its axes, and also of highly complex
        data, such as the simulation results of an entire multi-component instrument. This
        flexibility is achieved through a hierarchical 
        <indexterm>
            <primary>hierarchy</primary>
        </indexterm>
        structure, with related 
        <emphasis>fields</emphasis><footnote>
            <para>In this manual, we use the terms <emphasis>field</emphasis>,
                <emphasis>data field</emphasis>, and 
                <emphasis>data item</emphasis> synonymously to be consistent
                with their meaning between NeXus data file instances and 
                NXDL specification files.
            </para>
        </footnote>
        <indexterm>
            <primary>data objects</primary>
            <secondary>fields</secondary>
        </indexterm>
        collected together into <emphasis>groups</emphasis>, 
        making NeXus files easy to navigate, even without any
        documentation. NeXus files are self-describing, and should be easy to understand, at
        least by those familiar with the experimental technique.
    </para>
    <para>
        The logical design is distinct from the underlying format used to store the NeXus file
        on disk, which are written using the 
        <link xlink:href="#ApplicationProgramInterfaceSection"
            >NeXus Application Program Interface (NAPI)</link>. 
        <indexterm>
            <primary>NAPI</primary>
        </indexterm>
        Summary documentation is provided in
        <xref linkend="ApplicationProgramInterfaceSection"/>.  
        Further details are provided
        in <xref linkend="chap.NAPI"/>.
    </para>
    
    <!-- 
        ======================
        section: NeXus Objects
        ======================
    -->
    <section>
        <title>NeXus Objects</title>
        <para>NeXus data files contain two types of elementary object: 
            <emphasis>groups</emphasis> and <emphasis>fields</emphasis>. 
            <indexterm significance="preferred">
                <primary>data objects</primary>
            </indexterm>
            NeXus <emphasis>group</emphasis> names and <emphasis>field</emphasis> 
            names
            <indexterm>
              <primary>rules</primary>
              <secondary>NeXus</secondary>
              <tertiary>naming</tertiary>
            </indexterm> 
            must only contain a restricted set of characters as described 
            by the regular expression syntax of
            <xref linkend="RegExpName"/>.
            <example xml:id="RegExpName">
              <title>Regular expression pattern for NXDL group and field names</title>
              <programlisting language="c"
                >[A-Za-z_][\w_]*</programlisting>
            </example>
            Note that this name pattern starts with a letter (upper or lower case)
            or "_", then letters, 
            numbers, and "_" and is limited to a limit of 63 characters
            imposed by the HDF5 rules for names.
            <indexterm>
              <primary>rules</primary>
              <secondary>HDF5</secondary>
            </indexterm>
            In addition, metadata 
            <indexterm><primary>metadata</primary></indexterm>
            required to describe a group or field, such as 
            its physical units,
            <indexterm><primary>units</primary></indexterm>
            can be attached to the data as data attributes.
            <indexterm><primary>attributes</primary><secondary>data</secondary></indexterm>
        </para>
        <section xml:id="sect.data.groups">
            <title>Data Groups</title>
            <para>
                NeXus files consist of data groups,
                <indexterm significance="preferred">
                    <primary>data objects</primary>
                    <secondary>groups</secondary>
                </indexterm>
                which contain fields and/or other
                groups to form a hierarchical structure.
                <indexterm>
                    <primary>hierarchy</primary>
                </indexterm>
                This hierarchy is designed to make it
                easy to navigate a NeXus file by storing related fields together. Data
                groups are identified both by a name, which must be unique within a particular
                group, and a class. There can be multiple groups with the same class
                but they must have different names (based on the HDF rules).
                <indexterm>
                    <primary>rules</primary>
                    <secondary>HDF</secondary>
                </indexterm>
            </para>
        </section>
        
        <!-- 
            ====================
            section: Data Fields
            ====================
        -->
        <section>
            <title>Data Fields</title>
            <para>Data fields 
                <indexterm significance="preferred">
                    <primary>data objects</primary>
                    <secondary>fields</secondary>
                </indexterm>
                <indexterm significance="preferred">
                    <primary>data objects</primary>
                    <secondary>data items</secondary>
                    <see>fields</see>
                </indexterm>
                contain the essential information stored in a NeXus file. They can
                be scalar values or multidimensional arrays of a variety of sizes (1-byte,
                2-byte, 4-byte, 8-byte) and types (integers, floats, characters). The fields may
                store both experimental results (counts, detector angles, etc), and other
                information associated with the experiment (start and end times, user names,
                etc). Data fields are identified by their names, which must be unique within the
                group in which they are stored.</para>
        </section>
        
        <!-- 
            ========================
            section: Data Attributes
            ========================
        -->
        <section>
            <title>Data Attributes</title>
            <para>Attributes 
                <indexterm significance="preferred">
                    <primary>data objects</primary>
                    <secondary>attributes</secondary>
                </indexterm>
                are extra (meta-)information that are associated with particular
                fields. They are used to annotate the data, e.g. with physical units 
                <indexterm>
                    <primary>units</primary>
                </indexterm> 
                or calibration offsets, and may be scalar numbers or character
                strings. In addition, NeXus uses attributes to identify plottable data
                <indexterm>
                    <primary>NeXus basic motivation</primary>
                    <secondary>default plot</secondary>
                </indexterm>
                and their
                axes, etc. Finally, NeXus files themselves have global attributes 
                <indexterm>
                    <primary>data objects</primary>
                    <secondary>attributes</secondary>
                    <tertiary>global</tertiary>
                </indexterm>
                that identify
                the NeXus version, file creation time, etc. 
                Attributes are identified by their
                names, which must be unique in each field.
                More information about attributes is given in
                <xref linkend="sect.nexus.attributes"/>.
                
            </para>
        </section>
        
        <!-- 
            ========================
            section: Links
            ========================
        -->
        <section xml:id="sect.data.links">
            <title>Links</title>
            <para>
                Links<indexterm><primary>link</primary></indexterm>
                 are pointers to existing data somewhere else. 
                The concept is very much like 
                symbolic links in a unix filesystem.
                The NeXus definition sometimes requires to 
                have access to the same data in different groups 
                in the same file. For example: detector data is stored in the 
                <code>NXinstrument/NXdetector</code> group 
                but may be needed in <code>NXdata</code> for automatic plotting. 
                Rather then replicating the data, NeXus uses 
                links in such situations. 
           </para>
        </section>

    </section>
    
    <!-- 
        ================================
        section: NeXus Classes
        ================================
    -->
    <section>
        <title>NeXus Classes</title>
        <para>Data groups often describe objects in the experiment (monitors, detectors,
            monochromators, etc.), so that the contents (both data fields and/or other data
            groups) comprise the properties of that object. NeXus has defined a set of standard
            objects, or base classes, out of which a NeXus file can be constructed. Each data group
            is therefore identified by a name and a class. The group class, defines the type of object
            and the properties that it can contain, whereas the group name defines a unique instance
            of that class. These classes are
            defined in XML using the NeXus Definition Language (NXDL) 
            <indexterm>
                <primary>NXDL</primary>
            </indexterm> format. All NeXus class types adopted by the NIAC <emphasis>must</emphasis> 
            begin with <code>NX</code>.  
            <indexterm>
              <primary>rules</primary>
              <secondary>naming</secondary>
            </indexterm>
            Classes not adopted by the NIAC <emphasis>must not</emphasis>
            start with <code>NX</code>.
        </para>
        <para>
            Not all classes define physical objects. Some refer to logical groupings of
            experimental information, such as plottable data, 
            <indexterm>
                <primary>NeXus basic motivation</primary>
                <secondary>default plot</secondary>
            </indexterm>
            sample environment logs, beam
            profiles, etc.
            There can be multiple instances of each class. On
            the other hand, a typical NeXus file will only contain a small subset of the
            possible classes.
        </para>
        
        <!-- 
            ===================
            section: NeXus Data
            ===================
        -->
        <section>
            <title>NeXus Data</title>
            <para>One NeXus design aim <indexterm>
                    <primary>NeXus</primary>
                    <secondary>design aims</secondary>
                </indexterm> was to make it possible to separate the measured data in a NeXus
                file from all the metadata
                <indexterm><primary>metadata</primary></indexterm>
                that describe how that measurement was performed. In
                principle, it should be possible for a plotting utility to identify the
                plottable data automatically
                <indexterm>
                    <primary>NeXus basic motivation</primary>
                    <secondary>default plot</secondary>
                </indexterm>
                (or to provide a list of choices if there is more
                than one set of data). In order to distinguish the actual measurements from this
                metadata, it is stored separately in groups with the class <code>NXdata</code>.
                <indexterm><primary>NXdata</primary></indexterm>
                These groups encapsulate all the information required to produce a meaningful
                plot, including any error arrays and axis scales, i.e. the physical values
                corresponding to the data dimensions.
            </para>
            <para>
                The <code>NXdata</code> groups have to be flexible enough to cope with data of
                arbitrary rank 
                <indexterm><primary>rank</primary></indexterm>
                and provide a mechanism for associating axis scales with the
                appropriate dimension of data. We use data attributes to accomplish this. Here
                are the main rules
                <indexterm>
                    <primary>rules</primary>
                </indexterm>
                that must be followed in constructing an <code>NXdata</code>
                group. 
                <indexterm><primary>NXdata</primary></indexterm>
                <itemizedlist>
                    <listitem>
                        <para>Each <code>NXdata</code> group will consist of only one data set
                            containing plottable data
                            <indexterm>
                                <primary>NeXus basic motivation</primary>
                                <secondary>default plot</secondary>
                            </indexterm>
                            and their standard deviations.</para>
                    </listitem>
                    <listitem>
                        <para>
                            The data set will be identified by the attribute:
                            <code>signal="1"</code>
                        </para>
                    </listitem>
                    <listitem>
                        <para>This data set may be of arbitrary 
                            rank.<indexterm><primary>rank</primary></indexterm></para>
                    </listitem>
                </itemizedlist> If available, the standard deviations of the data are to be
                stored in a data set of the same rank and dimensions, with the name <code>errors</code>. 
                <itemizedlist>
                    <listitem>
                        <para>For each data dimension, there should be a one-dimensional array
                            of the same length. </para>
                    </listitem>
                    <listitem>
                        <para>These one-dimensional arrays are the 
                            <emphasis>dimension scales</emphasis> of the
                            data,  <emphasis>i.e</emphasis>. the values 
                            of the independent variables at which the data
                            is measured, such as scattering angle 
                            or energy transfer. </para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                There are two methods of linking 
                <indexterm>
                    <primary>link</primary>
                </indexterm> 
                each data dimension to its respective dimension scale. 
                The preferred method uses the <code>axes</code> attribute
                to specify the names of each dimension's scale.
                The original method uses the <code>axis</code> attribute to identify
                with an integer the axis whose value is the number of the dimension.
                After describing each of these methods, the two methods will be compared.
            </para>
            <section>
                <title>Linking by name using the <code>axes</code> attribute</title>
                <para>The preferred method is to define an attribute of the data itself
                    called <emphasis>axes</emphasis>. 
                    <indexterm><primary>axes</primary></indexterm>
                    The <code>axes</code> attribute contains the names of 
                    each dimension's scale as a
                    comma or colon separated list in the order they appear in C.
                    Optionally, the list can be enclosed in brackets, but should not
                    contain any spaces, e.g. 
                    <example>
                        <title>Preferred way of denoting axes</title>
                        <programlisting  language="xml" linenumbering="numbered"
                            ><xi:include href="examples/axes-preferred.xml.txt" parse="text"
                            /></programlisting>
                    </example>
                </para>
            </section>
            <section>
                <title>Linking by dimension number using the 
                    <code>axis</code> attribute</title>
                <para>
                    The original method is to define an attribute of each dimension
                    scale called <emphasis>axis</emphasis>. 
                    <indexterm><primary>axis</primary></indexterm>
                    It is an integer whose value is the number of
                    the dimension, in order of fastest varying dimension. 
                    That is, if the array being stored is data with elements
                    <code>data[j][i]</code> in C and
                    <code>data(i,j)</code> in Fortran, where <code>i</code> is the 
                    time-of-flight index and <code>j</code> is
                    the polar angle index, the <code>NXdata</code> group would contain:
                    <indexterm><primary>NXdata</primary></indexterm>
                    <example>
                        <title>Original way of denoting axes</title>
                        <programlisting  language="xml" linenumbering="numbered"
                                    ><xi:include href="examples/axes-old.xml.txt" 
                                        parse="text"/></programlisting>
                    </example> The <code>axis</code> attribute must 
                    be defined for each dimension scale.
                    The <code>primary</code> attribute is unique to this method of linking.
                </para>
            </section>
            <section>
                <title>Discussion of the two linking methods</title>
                <para>
                    The preferred method is required when the dimension scale is used in
                    more than one <code>NXdata</code> group
                    <indexterm><primary>NXdata</primary></indexterm>
                    in a different context, 
                    e.g. it is used
                    as the x-axis in one group and the y-axis in another. </para>
                <para>The original method has the advantage of defining alternative axes
                    for automatic plotting.  This is shown in the example above for 
                    the <code>some_other_angle</code> field where <code>axis="1"</code>
                    denotes another possible primary axis for plotting.  The default
                    axis for plotting carries the <code>primary="1"</code> attribute.
                </para>
                <para>
                    However, when linking between <code>NXdata</code> groups,
                    <indexterm><primary>HDF</primary></indexterm>
                    HDF sets the link as it is created and this cannot be changed later.
                    The <code>axes</code> attribute, that allows axes to be re-used
                    more generally, was introduced in NeXus to work around the HDF behavior.
                </para>
                <para>
                    Both methods of linking data axes will be supported in NeXus
                    utilities that identify dimension scales, such 
                    as <code>NXUfindaxis()</code>. 
                </para>
                <para>
                    There are limited circumstances in which more 
                    than one dimension scale for the
                    same data dimension can be included in the same 
                    <code>NXdata</code> group.
                    <indexterm><primary>NXdata</primary></indexterm>
                    The most common is when the dimension scales are 
                    the three components of an 
                    <emphasis>(hkl)</emphasis> scan. In order to
                    handle this case, we have defined another attribute 
                    of type integer called
                    <code>primary</code> whose value determines the order 
                    in which the scale is expected to be
                    chosen for plotting, i.e.
                    <indexterm>
                        <primary>NeXus basic motivation</primary>
                        <secondary>default plot</secondary>
                    </indexterm>
                </para>
                <para>
                    <simplelist>
                        <member>1st choice: <code>primary="1"</code></member>
                        <member>2nd choice: <code>primary="2"</code></member>
                        <member>etc.</member>
                    </simplelist>
                </para>
                <para>
                    If there is more than one scale with the same value of the <code>axis</code> attribute, one
                    of them must have set <code>primary="1"</code>. Defining the <code>primary</code>
                    attribute for the other scales is optional.
                </para>
                <note>
                  <para>
                      The <code>primary</code> attribute can only be 
                      used with the first method of
                      defining dimension scales discussed above. In addition to 
                      the <code>signal</code> data, this
                      group could contain a data set of the same rank
                      <indexterm><primary>rank</primary></indexterm>
                      and dimensions called <code>errors</code>
                      containing the standard deviations of the data.
                  </para>
                </note>
                <para>It is often (usually) necessary to associate the data and/or axis scales with
                    other metadata 
                    <indexterm><primary>metadata</primary></indexterm>
                    stored in other groups, e.g. the <code>NXsample</code> group or components of
                    the <code>NXinstrument</code> group. For example, it may be necessary to perform corrections
                    for the detector efficiency using information stored in the associated
                    <code>NXdetector</code> group. In this case, it is recommended that the
                    relevant arrays are initially stored in those groups, and then linked <indexterm>
                        <primary>link</primary>
                    </indexterm> to the <code>NXdata</code> group.
                    <indexterm><primary>NXdata</primary></indexterm>
                    The API will provide a mechanism
                    for identifying the parent group so that the relevant metadata can be accessed. </para>
                <para>Here is a simple example to illustrate the concept: <example>
                    <title>Abbreviated NeXus data file</title>
                    <programlisting  language="xml" linenumbering="numbered"
                    ><xi:include href="examples/abbreviated-nexus-file.xml.txt" parse="text"
                    /></programlisting>
                </example></para>
                <para>The general principle is that physical quantites are stored in the groups that
                    they refer to (e.g. counts in <code>NXdetector</code>, temperature in <code>NXsample</code>)
                    and these quantities are then linked into <code>NXdata</code> for interpretation.
                    <indexterm><primary>NXdata</primary></indexterm>
                    In this
                    example, there are two axis scales, <code>magnetic_field</code> and <code>time_of_flight</code>, which
                    are stored in <code>NXsample</code> and <code>NXdetector</code> groups respectively. A
                    program is able to use the information in the <code>link</code> attribute to locate the
                    respective groups. One corollary of this is that there should be one
                    <code>NXdetector</code> group for each <code>NXdata</code> group, e.g. one for each
                    detector bank in a multi-bank instrument.</para>
                <para>The syntax of the "link" attribute requires a bit of explanation. Under HDF4,
                    you can only create, what would be called under UNIX, "hard links". Hard links
                    have the characteristics that: <itemizedlist>
                        <listitem>
                            <para>The name of the entity must be the same in both the original and
                                linked groups </para>
                        </listitem>
                        <listitem>
                            <para>The attributes of both the origial entity and the linked one are
                                the same </para>
                        </listitem>
                        <listitem>
                            <para>You cannot distinguish the original entity from the linked
                                one</para>
                        </listitem>
                        <listitem>
                            <para>You cannot follow a link - it is like an inode in a filesystem and
                                just points at the data </para>
                        </listitem>
                    </itemizedlist></para>
                <para>To overcome this and allow us to link from <code>NXdata</code>
                    <indexterm><primary>NXdata</primary></indexterm>
                    to, say,
                    <code>NXsample</code> and to know that the original data belongs to
                    <code>NXsample</code> we write the <code>link</code> attribute that contains the path
                    of the original group containing it. All linked entities will share this <code>link</code>
                    attribute and thus can use it to locate the original source group. We are
                    effectively using the <code>link</code> attribute to simulate <emphasis>symbolic links</emphasis>. So in the
                    above example, both the original <code>time_of_flight</code> and the linked one will share a
                    link attribute containing the text <code>/entry/instrument/detector</code> because
                    <code>/entry/instrument/detector/time_of_flight</code>
                    is the original instance.</para>
            </section>
        </section>
        
        <!-- 
            ================================
            section: NeXus Attributes
            ================================
        -->
        <section xml:id="sect.nexus.attributes">
            <title>NeXus Attributes</title>
            <para>
                Metadata (additional information that describes the primary data) 
                <indexterm significance="preferred"><primary>metadata</primary></indexterm>
                is provided
                in NeXus data files through additional groups, fields, and attributes.  Attributes
                are used to describe specific groups or fields, such as <code>name="entry"</code>
                or <code>axis="1"</code>.  Global attributes, as shown in
                <xref linkend="GlobalAttributes"/> apply to the entire NeXus file.  In HDF files,
                these are global, while in XML files, these are attributes of the XML file's root 
                element: <code>NXroot</code>.  
                Examples of other attributes are given in <xref linkend="ExampleAttributes"/>.
            </para>
            <table role="small" xml:id="GlobalAttributes">
                <title>
                    Global Attributes
                    <indexterm><primary>attributes</primary><secondary>global</secondary></indexterm>
                </title>
                <tgroup cols="3" align="left" colsep="1" rowsep="1">
                    <colspec colwidth="1*"/>
                    <colspec colwidth="1*"/>
                    <colspec colwidth="3*"/>
                    <thead>
                        <row>
                            <entry><?dblatex bgcolor="[gray]{0.8}"?>Name</entry>
                            <entry><?dblatex bgcolor="[gray]{0.8}"?>Type</entry>
                            <entry><?dblatex bgcolor="[gray]{0.8}"?>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>file_name</entry>
                            <entry>NX_CHAR</entry>
                            <entry>File name of original NeXus file to assist in identification
                                if the external name has been changed</entry>
                        </row>
                        <row>
                            <entry>file_time</entry>
                            <entry>ISO 8601
                                <indexterm><primary>ISO 8601</primary><see>date and time</see></indexterm>
                                <indexterm><primary>time</primary><see>date and time</see></indexterm>
                                <indexterm><primary>date and time</primary></indexterm>
                            </entry>
                            <entry>Date and time of file creation</entry>
                        </row>
                        <row>
                            <entry>file_update_time</entry>
                            <entry>ISO 8601</entry>
                            <entry>Date and time of last file change at close</entry>
                        </row>
                        <row>
                            <entry>NeXus_version</entry>
                            <entry>NX_CHAR</entry>
                            <entry>Version of NeXus API used in writing the file</entry>
                        </row>
                        <row>
                            <entry>creator</entry>
                            <entry>NX_CHAR</entry>
                            <entry>Facility or program where the file originated</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <table role="small" xml:id="ExampleAttributes">
                <title>
                    Examples of data attributes
                    <indexterm><primary>attributes</primary><secondary>data</secondary></indexterm>
                </title>
                <tgroup cols="3" align="left" colsep="1" rowsep="1">
                    <colspec colwidth="1*"/>
                    <colspec colwidth="1*"/>
                    <colspec colwidth="3*"/>
                    <thead>
                        <row>
                            <entry><?dblatex bgcolor="[gray]{0.8}"?>Name</entry>
                            <entry><?dblatex bgcolor="[gray]{0.8}"?>Type</entry>
                            <entry><?dblatex bgcolor="[gray]{0.8}"?>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>units</entry>
                            <entry>NX_CHAR</entry>
                            <entry>
                                <para> Data units, 
                                    <indexterm><primary>units</primary></indexterm>
                                    given as character strings,
                                    must conform to the NeXus units standard.  
                                    See the 
                                    <link xlink:href="#NeXus.units"
                                        >"NeXus units"</link> section for details. </para>
                            </entry>
                        </row>
                        <row>
                            <entry>signal</entry>
                            <entry>NX_INT32</entry>
                            <entry>Defines which data set contains the signal 
                                to be plotted
                                <indexterm>
                                    <primary>NeXus basic motivation</primary>
                                    <secondary>default plot</secondary>
                                </indexterm>
                                use <code>signal="1"</code> for main signal</entry>
                        </row>
                        <row>
                            <entry>axes</entry>
                            <entry>NX_CHAR</entry>
                            <entry>
                                <indexterm><primary>axes</primary></indexterm>
                                Defines the names of the dimension scales for this data set
                                as a comma-delimited array, optionally surrounded by brackets
                                (see a longer discussion in the section on <code>NXdata</code> structure)
                                i.e. if the array being stored is <code>data</code>, with
                                elements <code>data[j][i]</code> in C and <code>data(i,j)</code>
                                in Fortran, with dimension scales <code>time_of_flight[i]</code>
                                and <code>polar_angle[j]</code>, <code>data</code> would have an
                                attribute called <code>axes</code> with the following value :
                                    <code>[polar_angle,time_of_flight]</code></entry>
                        </row>
                        <row>
                            <entry>axis</entry>
                            <entry>NX_INT32</entry>
                            <entry>
                                <indexterm><primary>axis</primary></indexterm>
                                The old way of designating data for plotting,
                                <indexterm>
                                    <primary>NeXus basic motivation</primary>
                                    <secondary>default plot</secondary>
                                </indexterm>
                                now superceded by
                                the <code>axes</code> attribute.
                                This defines
                                the rank 
                                <indexterm><primary>rank</primary></indexterm>
                                of the signal data for which this data set is a
                                dimension scale in order of the fastest varying index (see a
                                longer discussion in the section on <code>NXdata</code> structure), i.e. if
                                the array being stored is <code>data</code>, with elements
                                    <code>data[j][i]</code> in C and <code>data(i,j)</code> in
                                Fortran, <code>axis</code> would have the following values: 
                                ith dimension (<code>axis="1"</code>), 
                                jth dimension (<code>axis="2"</code>), 
                                etc. </entry>
                        </row>
                        <row>
                            <entry>primary</entry>
                            <entry>NX_INT32</entry>
                            <entry>Defines the order of preference for dimension scales which
                                apply to the same rank
                                <indexterm><primary>rank</primary></indexterm>
                                of signal data.  Use <code>primary="1"</code>to indicate preferred
                                dimension scale</entry>
                        </row>
                        <row>
                            <entry>long_name</entry>
                            <entry>NX_CHAR</entry>
                            <entry>Defines title of signal data or axis label of dimension
                                scale</entry>
                        </row>
                        <row>
                            <entry>calibration_status</entry>
                            <entry>NX_CHAR</entry>
                            <entry>Defines status of data value - set to "Nominal" or
                                "Measured"</entry>
                        </row>
                        <row>
                            <entry>histogram_offset</entry>
                            <entry>NX_FLOAT32</entry>
                            <entry>Defines the offset from the first data point to its bin
                                boundary. i.e. left_bin = data[1] - histogram_offset - set to 0
                                if the data are not histograms. The points themselves should be
                                set to the bin centers. For reasoning behind this design, see
                                note on histograms.</entry>
                        </row>
                        <row>
                            <entry>checksum</entry>
                            <entry>NX_INT32</entry>
                            <entry>Sum of data array acting as a check on data integrity</entry>
                        </row>
                        <row>
                            <entry>version</entry>
                            <entry>NX_CHAR</entry>
                            <entry>Version of NXDL file on which the NeXus file is
                                based. Should only be used with the <emphasis>analysis</emphasis>
                                field in an <literal>NXentry</literal> group.
                            </entry>
                        </row>
                        <row>
                            <entry>URL</entry>
                            <entry>NX_CHAR</entry>
                            <entry>The URL of the NXDL file on which the NeXus file
                                is based. Should only be used with the 
                                <emphasis>analysis</emphasis> field in
                                an <literal>NXentry</literal> group.
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
    </section>
    
    <!-- 
        ========================================
        section: Hierarchy of NeXus Base Classes
        ========================================
    -->
    <section xml:id="sect.hierarchy.base">
        <title>Hierarchy of NeXus Base Classes</title>
        <para>
            A standard NeXus file is composed from a selection of NeXus base classes.
            The particular selection may be guided by a NeXus application definition 
            (see the NXDL section in Volume II, <xref linkend="chap.NXDL"/>, for more details)
            but it is not necessary to use an NXDL file to write a NeXus data file.
            The base classes have a hierarchy for their use
            (shown in <xref linkend="list.hierarchy.base"/>)
            and this hierarchy
            <indexterm significance="preferred">
                <primary>hierarchy</primary>
                <secondary>base classes</secondary>
            </indexterm>
            forms the internal structure of all NeXus data files.
            Keep in mind these two very important points:
            <orderedlist>
                <listitem>
                    <para>
                        There can be multiple instances of each class.  
                        They <emphasis>must</emphasis> have different names. 
                        (Required rule of HDF: no exceptions.)
                        <indexterm>
                            <primary>rules</primary>
                            <secondary>HDF</secondary>
                        </indexterm>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        A typical NeXus file contains only a small subset 
                        of the possible base classes.
                    </para>
                </listitem>
            </orderedlist>
            A complete description of each base class is provided in 
            <xref linkend="ClassDefinitionsChapter"/>.
            In addition to the hierarchy of classes in 
            <xref linkend="list.hierarchy.base"/>, 
            the groups in <xref linkend="list.additions.base"/> can be added to any group 
            in a NeXus file (from <code>NXentry</code> and below). 
        </para>
        <para>
            Also note that within each level of the hierarchy, the classes may appear in any order.
            HDF will always present them in alphabetical order.  (Indeed, this very point is
            a primary reason that validation relies on the Schematron validation language 
            <indexterm><primary>Schematron</primary></indexterm>
            to transform the NXDL files as an internal step.  
            XML Schema, also called XSD, imposes
            a more rigid structure and requires much more work to build rules
            <indexterm>
                <primary>rules</primary>
                <secondary>XML</secondary>
            </indexterm>
            that permit
            the ordering of the classes presented by HDF.)
        </para>
        <figure xml:id="list.hierarchy.base">
            <title>Hierarchy of NeXus Base Classes</title>
            <!-- 
                content constructed manually from 
                http://www.nexusformat.org/Design#NeXus_Classes 
            -->
            <indexterm>
                <primary>hierarchy</primary>
                <secondary>base classes</secondary>
            </indexterm>
            <itemizedlist>
                <listitem>
                    <para>
                        <link xlink:href="#NXrootSection"
                            ><code>NXroot</code></link>
                        in XML or just <code>root</code> in HDF files.  This is always the root node of a NeXus data file.
                        Only <code>NXentry</code> group(s) or non-NeXus items may be children of the root element.
                        <itemizedlist>
                            <listitem>
                                <para>
                                    <link xlink:href="#NXentrySection"
                                        ><code>NXentry</code></link>
                                    All the data, including instrument and sample descriptions, which logically 
                                    make up a single scan or measurement. At many facilities, this corresponds 
                                    to the entity that is defined by a single run number, which could be used to 
                                    name the <code>NXentry</code> group. There can be many <code>NXentry</code> 
                                    groups in each NeXus file.
                                    <itemizedlist>
                                        <listitem><para><link xlink:href="#NXinstrumentSection"><code>NXinstrument</code></link>
                                            The information needed to describe the instrument, technique, or scientific application. 
                                            This group contains other groups that describe instrument components
                                            such as monochromators, choppers, collimators, apertures, positioners, detectors... 
                                            <itemizedlist>
                                                <listitem><para><link xlink:href="#NXapertureSection"><code>NXaperture</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXattenuatorSection"><code>NXattenuator</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXbeam_stopSection"><code>NXbeam_stop</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXbending_magnetSection"><code>NXbending_magnet</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXcollimatorSection"><code>NXcollimator</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXcrystalSection"><code>NXcrystal</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXdetectorSection"><code>NXdetector</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXdisk_chopperSection"><code>NXdisk_chopper</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXfermi_chopperSection"><code>NXfermi_chopper</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXfilterSection"><code>NXfilter</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXflipperSection"><code>NXflipper</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXguideSection"><code>NXguide</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXinsertion_deviceSection"><code>NXinsertion_device</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXmirrorSection"><code>NXmirror</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXmoderatorSection"><code>NXmoderator</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXmonochromatorSection"><code>NXmonochromator</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXpolarizerSection"><code>NXpolarizer</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXpositionerSection"><code>NXpositioner</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXsourceSection"><code>NXsource</code></link></para></listitem>
                                                <listitem><para><link xlink:href="#NXvelocity_selectorSection"><code>NXvelocity_selector</code></link></para></listitem>
                                            </itemizedlist></para></listitem>
                                        <listitem><para><link xlink:href="#NXsampleSection"><code>NXsample</code></link>
                                            The information needed to define the physical state of the sample during the scan,
                                            such as temperature, magnetic field, crystal mosaic...
                                        </para></listitem>
                                        <listitem><para><link xlink:href="#NXmonitorSection"><code>NXmonitor</code></link>
                                            Monitor data, such as counts, integrals, etc. 
                                        </para></listitem>
                                        <listitem><para><link xlink:href="#NXdataSection"><code>NXdata</code></link>
                                            <indexterm><primary>NXdata</primary></indexterm>
                                            The data to be plotted,
                                            <indexterm>
                                                <primary>NeXus basic motivation</primary>
                                                <secondary>default plot</secondary>
                                            </indexterm>
                                            such as a single data set comprising the measurements 
                                            along with the data errors, and the default axis scales and labels required 
                                            to plot the data. There can be more than one <code>NXdata</code> group.
                                            For example, when there are several detector banks producing plottable data,
                                            <indexterm>
                                                <primary>NeXus basic motivation</primary>
                                                <secondary>default plot</secondary>
                                            </indexterm>
                                            separate <code>NXdata</code> groups will be used, each with a different
                                            name.
                                        </para></listitem>
                                        <listitem><para><link xlink:href="#NXevent_dataSection"><code>NXevent_data</code></link>
                                            Event-based data, such as a data set in which each count is recorded 
                                            as a separate data event. This form might be chosen when the data 
                                            are too sparse to be stored efficiently in histograms. 
                                            Normally, such data must be converted to a regular <code>NXdata</code>
                                            group before it can be analyzed. 
                                            <indexterm><primary>NXdata</primary></indexterm>
                                        </para></listitem>
                                        <listitem><para><link xlink:href="#NXuserSection"><code>NXuser</code></link>
                                            Details of a user, such as name, affiliation, email address, etc.
                                        </para></listitem>
                                        <listitem><para><link xlink:href="#NXprocessSection"><code>NXprocess</code></link>
                                            Group used to store details of how the data have been processed. 
                                        </para></listitem>
                                        <listitem><para><link xlink:href="#NXcharacterizationSection"><code>NXcharacterization</code></link>
                                            Information required for the analysis of this <code>NXentry</code>, 
                                            such as identification of empty can runs, vanadium runs, etc. 
                                        </para></listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
            </itemizedlist>
        </figure>
        <figure xml:id="list.additions.base">
            <title>NeXus Base Classes that may be added to any base class</title>
            <itemizedlist>
                <listitem><para><link xlink:href="#NXlogSection"><code>NXlog</code></link>
                    Any logged information.
                </para></listitem>
                <listitem><para><link xlink:href="#NXnoteSection"><code>NXnote</code></link>
                    Generic group designed to hold annotations, images, or any other type
                    of information not described in an existing base class.
                </para></listitem>
                <listitem><para><link xlink:href="#NXbeamSection"><code>NXbeam</code></link>
                    This group records the state of the radiation (neutron, X-ray, or muon) 
                    beam at any location. It could be referenced by instrument components 
                    within the <code>NXinstrument</code> group or by the <code>NXsample</code> 
                    group. In storing the results of instrument simulations in which it 
                    is useful to specify the beam profile, time distribution etc., at 
                    various stages down the beamline. Otherwise, its most likely use 
                    is in the <code>NXsample</code> group in which it defines the 
                    results of the radiation scattered by the sample, such as energy 
                    transfer, polarizations, and the like. 
                </para></listitem>
                <listitem><para><link xlink:href="#NXgeometrySection"><code>NXgeometry</code></link>
                    This group contains the geometrical information required to define the position, 
                    shape, and orientation of a NeXus object. This is especially important if 
                    the NeXus file contains the results of a comprehensive instrument simulation. 
                    For more details see <xref linkend="NeXus.Coordinate.System"/>.
                    <itemizedlist>
                        <listitem><para><link xlink:href="#NXtranslationSection"><code>NXtranslation</code></link>
                            Defines the position of the object in either absolute coordinates or relative to another object.
                        </para></listitem>
                        <listitem><para><link xlink:href="#NXshapeSection"><code>NXshape</code></link>
                            Defines the shape of an object. 
                        </para></listitem>
                        <listitem><para><link xlink:href="#NXorientationSection"><code>NXorientation</code></link>
                            Defines the orientation (rotation) of the object. The <code>NXgeometry</code> group defines 
                            the shape of an object in terms of a conventional set of coordinate axes, 
                            but this group allows it to be rotated into an arbitrary orientation.
                        </para></listitem>
                    </itemizedlist>
                </para></listitem>
                <listitem><para><link xlink:href="#NXenvironmentSection"><code>NXenvironment</code></link>
                    Details of the surroundings (environment) of a beamline component. 
                    <itemizedlist>
                        <listitem><para><link xlink:href="#NXsensorSection"><code>NXsensor</code></link>
                            Describes any environment sensor.
                        </para></listitem>
                    </itemizedlist>
                </para></listitem>
            </itemizedlist>
        </figure>
    </section>
    
    <!-- 
        ================================
        section: NeXus Coordinate System
        ================================
    -->
    <section xml:id="NeXus.Coordinate.System">
        <title>NeXus Coordinate System
            <indexterm><primary>geometry</primary></indexterm>
        </title>
        <para> Nexus provides two coordinate systems: 
            <indexterm><primary>coordinates</primary></indexterm>
            a <link xlink:href="#coordinate.spherical">
                <citetitle>polar coordinate based system</citetitle>
            </link> for scattering coordinates
            and 
            a <link xlink:href="#NXgeometrySection"
            ><literal>NXgeometry</literal> based system</link> 
            for physical coordinates of beamline components. 
            The coordinate origin is discussed in <xref linkend="CoordinateOrigin"/>.
            The usage of these two systems can be illustrated by
            considering a <superscript>3</superscript>He gas tube detector
            on a neutron scattering instrument: </para>
        <itemizedlist mark="opencircle">
            <listitem>
                <para> The <link xlink:href="#coordinate.spherical">
                        <citetitle>polar system</citetitle>
                </link> would describe the scattering, rather than actual, 
                    geometry. <indexterm><primary>geometry</primary></indexterm>
                    For
                    example, the <emphasis>distance</emphasis> coordinate would refer to the
                    distance from the sample to an effective measurement point within the gas
                    tube, which would depend on neutron energy; lower energy neutrons would tend
                    to penetrate a smaller distance within the tube, and so have a shorter
                    secondary flight path. </para>
            </listitem>
            <listitem>
                <para> The <link xlink:href="#coordinate.NXgeometry"><literal>NXgeometry</literal> 
                    system</link>
                    represents true spatial location and would describe 
                    a cylinder at a certain
                    distance from the sample that never changes from one 
                    run to another </para>
            </listitem>
        </itemizedlist>
        <para>
            In NeXus, we have not defined
            rotation directions. The triple polar_angle, 
            azimuthal_angle and distance define a polar 
            coordinate system. Polar_angle is ALWAYS two-theta, 
            even if the detector does not happen to live in
            the scattering plane. The azimuthal_angle defines 
            by how much the plane in which the 0 point of 
            the drawing and the blue point live is tilted 
            towards the scattering plane.
        </para>
        <simplelist>
            <member><literal>polar_angle</literal>: rotation y' about the Y axis, but 
              the rotation axis is with the next upstream component</member>
            <member><literal>azimuthal_angle</literal>: rotation z' about the Z axis</member>
            <member><literal>rotation_angle</literal>: rotation y' about the Y axis</member>
        </simplelist>
        <note>
            <para>The NeXus definition of <literal>+z</literal> is opposite to that
                in the International Tables for Crystallography, 
                volume G, and consequently, <literal>+x</literal> is also reversed.</para>
        </note>
        <section xml:id="coordinate.spherical">
            <title>
                Simple (Spherical Polar) Coordinate System
                <indexterm><primary>geometry</primary></indexterm>
            </title>
            <para> 
                In this system, the instrument is considered as a set of components through
                which the incident beam passes. The variable <emphasis role="bold"
                    >distance</emphasis> is assigned to each component and represents the
                effective beam flight path length between this component and the sample. A sign
                convention is used where negative numbers represent components pre-sample and positive
                numbers components post-sample. </para>
            <para> For angular information, the quantities <emphasis>polar_angle</emphasis> and
                <emphasis>azimuthal_angle</emphasis>,
                as shown in <xref linkend="polar-geometry-figure"/>,
                are used and these quantities
                correspond exactly to the usual <link xlink:href="#coordinate.spherical">
                    <citetitle>spherical polar coordinate</citetitle>
                </link> definitions i.e. the <code>polar_angle</code> is the 
                <emphasis>zenith angle</emphasis> and measured with respect to a
                <emphasis>z</emphasis> axis
                and the <code>azimuthal_angle</code> to the <emphasis>x</emphasis> 
                axis in the <emphasis>xy</emphasis> plane. The
                direction of these local axes may be different for each component:
                    <emphasis>z</emphasis> is the incident beam direction for the <emphasis
                    role="bold">previous</emphasis> component and we then follow <link
                    xlink:href="http://mcstas.risoe.dk">
                    <citetitle>McStas</citetitle>
                    <indexterm>
                        <primary>McStas</primary>
                    </indexterm>
                </link> for <emphasis>x</emphasis> and <emphasis>y</emphasis> i.e. the
                <emphasis>x</emphasis> axis is perpendicular to the beam in the horizontal
                plane pointing left as seen from the source, and the <emphasis>y</emphasis> axis
                points upwards (see diagram below). The <emphasis>z</emphasis> axis thus
                represents the direction of the beam if it was not redirected by the previous
                component, and so the polar_angle and azimuthal_angle for a component indicate
                how much the beam was bent/scattered by the previous component. 
                The <code>rotation_angle</code> is a rotation about the <emphasis>y</emphasis> axis.
            </para>
            <figure xml:id="polar-geometry-figure">
                <title>
                    NeXus Simple (Spherical Polar) Coordinate System
                </title>
                <mediaobject>
                    <imageobject>
                        <imagedata
                            fileref="img/polplane.png"
                            width="200pt" scalefit="1"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <para> If we consider an <code>NXdetector</code> element placed directly after an
                NXsample, the <emphasis>z</emphasis> axis would be in the direction of the beam
                incident on NXsample. The polar_angle for the <code>NXdetector</code> would be
                the angle between the scattered beam and this <emphasis>z</emphasis> axis and so
                correspond to the <emphasis>Bragg angle</emphasis> or 
                <emphasis>two theta</emphasis> even for out-of-plane scattering. 
                The azimuthal_angle would
                be the angle between the positive x-axis and the scattered beam projected onto
                the <emphasis>xy</emphasis>-plane - scattering to the left as seen from the source would have
                azimuthal_angle=0 and scattering to the right azimuthal_angle=pi. The distance
                would correspond to what is often called the 
                <emphasis>secondary flight path length</emphasis> or <emphasis>L2</emphasis>. 
            </para>
        </section>
        <section xml:id="coordinate.NXgeometry">
            <title>
                <literal>NXgeometry</literal>-based system
                <indexterm><primary>geometry</primary></indexterm>
            </title>
            <para> 
                The <literal>NXgeometry</literal>-based coordinate system,
                shown in <xref linkend="NXgeometry-figure"/>,
                is based more fully on the 
                <link xlink:href="http://mcstas.risoe.dk">
                    <citetitle>McStas coordinate system</citetitle>.
                    <indexterm>
                        <primary>McStas</primary>
                    </indexterm>
                </link>
                The instrument is given a global, absolute coordinate system where the
                    <emphasis>z</emphasis> axis points in the direction of the incident beam,
                the <emphasis>x</emphasis> axis is perpendicular to the beam in the horizontal
                plane pointing left as seen from the source, and the <emphasis>y</emphasis> axis
                points upwards. Each beamline component also has a local coordinate system,
                which is defined by the <link xlink:href="#NXgeometrySection"><literal
                        >NXgeometry</literal></link> object. The local
                    <emphasis>z</emphasis> direction for a component is taken as the incident
                beam direction, with <emphasis>x</emphasis> and <emphasis>y</emphasis> defined
                as before (<emphasis>i.e.</emphasis> the <emphasis>x</emphasis> axis is
                perpendicular to the beam in the horizontal plane pointing left as seen from the
                source, and the <emphasis>y</emphasis> axis points upwards). Information about
                these coordinate systems and the placement of components is described by the
                    <link xlink:href="#NXgeometrySection">NXgeometry</link> class via its
                    <code>NXtranslation</code> and <code>NXorientation</code> members. </para>
            <para>
                <figure xml:id="NXgeometry-figure">
                    <title>
                        <literal>NXgeometry</literal>-based coordinate system
                        <indexterm><primary>geometry</primary></indexterm>
                    </title>
                    <informaltable>
                        <tgroup cols="2">
                            <tbody>
                                <row>
                                    <entry>
                                        <mediaobject>
                                            <imageobject>
                                              <imagedata
                                              fileref="img/translation-orientation-geometry.jpg"
                                              width="200pt" scalefit="1"/>
                                            </imageobject>
                                            <caption>
                                              <para>view from source</para>
                                            </caption>
                                        </mediaobject>
                                    </entry>
                                    <entry>
                                        <mediaobject>
                                            <imageobject>
                                              <imagedata
                                              fileref="img/translation-orientation-geometry-2.jpg"
                                              width="200pt" scalefit="1"/>
                                            </imageobject>
                                            <caption>
                                              <para>view from detector</para>
                                            </caption>
                                        </mediaobject>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                </figure>
            </para>
            <para>
                The sign of the rotations as shown in 
                <xref linkend="NXgeometry-figure"/>,
                is technically correct although instrument 
                scientists might debate whether it is sensible.  
                (For example, an increasing Bragg angle for a 
                vertical reflection where the beam is bouncing 
                upwards seems as if it should be positive but 
                the proper sense of this <emphasis>x'</emphasis>, or pitch, rotation 
                must be negative if one wishes to obey the 
                right-hand rule.)  A review of what is written 
                in the International Tables for Crystallography 
                volume G might be in order to resolve this.
            </para>
            
            <section xml:id="CoordinateTransformations">
                <title>Coordinate Transformations</title>
                <para> When computing a transformation, <code>NXtranslation</code> is applied before
                    <code>NXorientation</code>. All NeXus axes are right handed and orthogonal.
                    Orientation information is stored as direction cosines. The direction cosines
                    will be between the local coordinate directions and the reference directions (to
                    origin or relative <link xlink:href="#NXgeometrySection">NXgeometry</link>). 
                    From the <code>value</code> field in <code>NXorientation</code>,
                    <quote>
                        Calling the local unit
                        vectors <emphasis>(x',y',z')</emphasis> and the reference unit vectors 
                        <emphasis>(x,y,z)</emphasis> the six numbers will
                        be <emphasis>[x' dot x, x' dot y, x' dot z, y' dot x, y' dot y, y' dot z]</emphasis> where "dot" is
                        the scalar dot product (cosine of the angle between the unit vectors). The unit
                        vectors in both the local and reference coordinates are right-handed and
                        orthonormal.
                    </quote>
                    With this restriction we only need to store 6 rather than 9
                    direction cosines, as the <emphasis>z'</emphasis> axis can
                    be obtained by the vector cross product of
                    <emphasis>x'</emphasis> and <emphasis>y'</emphasis>.
                </para>
            </section>
            <section xml:id="CoordinateOrigin">
                <title>The Coordinate Origin</title>
                <para> The origin of coordinates is arbitrary, but all components in the file must
                    either agree on its absolutelocation or use relative positioning. To allow for
                    this generality, an origin member can be defined in <code>NXentry</code>; its
                    use will be detailed shortly. </para>
                <para> We choose as our absolute the origin the scattering center, which is where a
                    perfectly aligned sample would be. Note that the centre of the sample itself may
                    not always be at this point if the sample is being scanned across the beam. With
                    an origin at the <emphasis>scattering centre</emphasis> the spherical polar
                    coordinate specifications of the detector positions conveniently relates to
                    scattering angles and lengths for direct geometry instruments. </para>
                <para> Individual components of the instrument (e.g. jaws) will have their own set
                    of local axes (x,y,z) which will be fixed to their body in a way defined by
                    their shape. These local axes will probably not coincidewith the global
                    instrument axes and so a set of rotation angles will also need to be stored. For
                    this an <link xlink:href="#NXgeometrySection"><literal
                            >NXgeometry</literal></link> class is defined, along
                    with <literal>NXtranslation</literal> and <literal>NXorientation</literal>; 
                    the hope is to provide a 
                    method sufficiently general for relating the
                    location of any object with respect to another object.
                    The mechanism also allows for specifying one position relative to another
                    component: a NeXus file link
                    <indexterm><primary>link</primary></indexterm>
                    is made in one instance of an <link xlink:href="#NXgeometrySection"
                        >NXgeometry</link> object to another <link xlink:href="#NXgeometrySection"
                        >NXgeometry</link> object and a program can then traverse the chain of links
                    to calculate an absolute position. </para>
                <para> NeXus does not need to define absolutely where to place the
                        <emphasis>origin</emphasis>. All components can instead be declared with a
                    relative position that ultimately follows a chain back to one object of class 
                    <link xlink:href="#NXgeometrySection"><literal>NXgeometry</literal></link>; this will
                    be named <emphasis>origin1</emphasis>, be and a <emphasis>field</emphasis> of 
                    <literal>NXentry</literal>. The real space
                    location of this origin is chosen for convenience and should be mentioned in the
                    description attached to <literal>origin1</literal>. If the origin is taken at
                    the sample, then <literal>sample.geometry.distance</literal> will always be
                    <emphasis>(0,0,0)</emphasis> relative to <literal>origin1</literal>; 
                    if the origin is taken
                    elsewhere this will not be so, but everything will still work. It may be
                    convenient to define extra origins (similar to <emphasis>arms</emphasis> in
                        <link xlink:href="http://mcstas.risoe.dk">
                        <citetitle>McStas</citetitle></link>)
                    <indexterm><primary>McStas</primary></indexterm>
                    <indexterm><primary>geometry</primary></indexterm>
                    at other parts of the instrument. For example, defining one at the
                    centre of a circular array of detectors would allow their positions to be
                    conveniently specified in spherical polar coordinates. Another possibility would
                    be to define the sample relative to <emphasis>origin1</emphasis> and the
                    detectors to <emphasis>origin2</emphasis>; the detectors could then be rotated
                    by a rotation of <emphasis>origin2</emphasis> without modifying
                        <code>NXdetector</code>. 
                </para>
                <para> 
                    As well as specifying the component location, it is also necessary to specify
                    the beam direction. Unless otherwise given in an <code>NXbeam</code> member of the component,
                    the incident beam is assumed to be travelling along <emphasis>(0,0,+z)</emphasis> in the coordinate
                    system of the object (or origin) our position was defined relative to. Thus, for
                    a component with absolute positioning the beam will always be in the incident
                    beam direction unless specified by an <code>NXbeam</code> member. </para>
            </section>
            <section xml:id="Size-Shape">
                <title>Size and Shape (<code>NXshape</code>)</title>
              <para>
                  Many instrument components define
                  <indexterm>
                      <primary>NeXus basic motivation</primary>
                      <secondary>defined dictionary</secondary>
                  </indexterm>
                  variables to specify their size.
                  For example, <emphasis>radius</emphasis> might be used to specify a circular object
                  while <emphasis>height</emphasis> and
                  <emphasis>width</emphasis> might be used to specify a rectangular object.
                  Rather than specify all
                  these different names, an alternative scheme is proposed based on the
                  <emphasis>shape</emphasis> of the object and the local coordinate axes this
                  shape defines. All objects would just need to specify a shape
                  (<emphasis>cuboid</emphasis>, <emphasis>cylinder</emphasis> etc.) and a size
                  array. Specifying <code>size[3]</code> would give the dimensions of the object along its
                  local <emphasis>(+-x,+-y,+-z</emphasis>) axes; specifying <code>size[6]</code> would give the extent along
                  <emphasis>(+x,+y,+z,-x,-y,-z)</emphasis> and allow for e.g. asymmetric jaws where the reference point
                  may not be the centre of the rectangle. 
              </para>
              <para> 
                  For example take
                  <code>shape="cylinder"</code>: the <code>NXtranslation</code> variable of position
                  would define the location of the reference point for the origin of the local
                  axes: <emphasis>z</emphasis> in the direction of the cylinder axis,
                  <emphasis>x</emphasis> and <emphasis>y</emphasis> in plane. With no rotation,
                  the object would be oriented with its local axes pointing in the direction of
                  axes of the object it was defined relative to, but this can be altered with the
                  <code>NXorientation</code> variable within position. If a <code>size[3]</code> array variable was
                  specified, the reference point must be the centre of the cylinder and the
                  dimension are <code>size[0]=size[1]=radius</code>, <code>size[2]=length/2</code>. If <code>size[6]</code> was
                  specified then the reference point would be elsewhere in the object, with its
                  distance from the cylinder edges along the various axes given by elements of the
                  <code>size[6]</code> array. </para>
            </section>
        </section>
    </section>
    
    <!-- 
        ==============================
        section: NeXus units
        ==============================
    -->
    <section xml:id="NeXus.units">
        <title>NeXus units</title>
        <para> NeXus units <indexterm significance="preferred">
                <primary>units</primary>
        </indexterm> are written as a string (<code>NX_CHAR</code>) 
            and describe the engineering units. The string
            should be appropriate for the value. 
            Values for the NeXus units must be specified in
            a format compatible with <link 
                xlink:href="http://www.unidata.ucar.edu/software/udunits/udunits-2-units.html"
                >Unidata UDunits</link>.<footnote>
                <para>Unidata UDunits: <link
                    xlink:href="http://www.unidata.ucar.edu/software/udunits/udunits-2-units.html"
                    ><literal
                        >http://www.unidata.ucar.edu/software/udunits/udunits-2-units.html</literal
                    ></link>
                </para>
                </footnote>  
            <indexterm>
                <primary>UDunits</primary>
            </indexterm>
            The UDunits specification also includes instructions 
            for derived units.
            At present, the contents of NeXus <literal>units</literal> attributes
            are not validated in data files.
            <!-- thus backwards compatible -->
        </para>
        <para>
            Given the plethora of possible applications of NeXus, it is difficult to 
            define units<indexterm><primary>units</primary></indexterm>
            to use. Therefore, the general rule is that you are free to 
            store data in any unit you find fit. However, any data field must have a 
            units attribute which describes the units used in the format used by the 
            udunits unit conversion program. Wherever possible, SI units are 
            preferred. Application definitions may specify units to be used for fields 
            using an 
            <code>enumeration</code>.<indexterm><primary>enumeration</primary></indexterm>
        </para>
    </section>
    
    <!-- 
        ==============================
        section: NeXus dates and times
        ==============================
    -->
    <section xml:id="NeXus.dates.times">
        <title>NeXus dates and times</title>
        <para>
            NeXus dates and times should be stored using the 
            <indexterm><primary>date and time</primary></indexterm>
            <link xlink:href="http://www.w3.org/TR/NOTE-datetime"
                >ISO 8601</link><footnote><para
                    >ISO 8601: <link xlink:href="http://www.w3.org/TR/NOTE-datetime"
                        ><literal
                            >http://www.w3.org/TR/NOTE-datetime</literal
                        ></link></para></footnote>
            format e.g. <literal>1996-07-31 21:15:22+0600</literal>. 
            The standard also allows for time intervals in fractional seconds
            with <emphasis>1 or more digits of precision</emphasis>.
            This will avoid confusion, e.g. between U.S. and European conventions, 
            and is appropriate for machine sorting. 
        </para>
    </section>
    
    <!-- 
        ===============================
        section: NeXus array dimensions
        ===============================
    -->
    <section xml:id="NeXus.dimensions">
        <title>NeXus array dimensions</title>
        <caution>
            <para>
                TODO Need a better writeup than this!
                Also need to confirm if this is correct!
            </para>
        </caution>
        <para>Here are a couple of examples to get this section started: 
            <example>
                <title>Example of array dimensions.</title>
                <programlisting  language="xml" linenumbering="numbered"
                    ><xi:include href="examples/array-dimensions.xml.txt" parse="text"
                    /></programlisting>
            </example> 
            In some programming language, this would make data[i,j,k] and
            time-of-flight[k+1]. </para>
    </section>
    
    <!-- 
        =========================
        section: NeXus Data Types
        =========================
    -->
    <section xml:id="NeXus.data.types">
        <title>NeXus Data Types</title>
        <table>
            <title>Matching regular expressions for NeXus data types</title>
        <!-- 
            Built this table from <code>../xslt/nexus_base.sch</code>

            <sch:let name="NAPItype_INT" value="'NX_INT(8|16|32|64)'"/>
            <sch:let name="NAPItype_FLOAT" value="'NX_FLOAT(32|64)'"/>
            <sch:let name="ARRAY_regexp" value="'(\[0-9\])?'"/>  <!-/- this is not complete -/->
            <sch:let name="NAPItype_regexp"  value="concat('NX_CHAR|',$NAPItype_INT,'|',$NAPItype_FLOAT)"/>
            <sch:let name="ValidItemName_regexp" value="'^[A-Za-z_][A-Za-z0-9_]*$'" />
            <sch:let name="ValidNXClassName_regexp" value="'^NX[A-Za-z0-9_]*$'" />
        -->
            <tgroup cols="2">
                <colspec colwidth="1*"/>
                <colspec colwidth="1*"/>
                <thead>
                    <row>
                        <entry>description</entry>
                        <entry>matching regular expression</entry>
                    </row>
                </thead>
                
                <tbody>
                    <row>
                        <entry>integer</entry>
                        <entry><code>NX_INT(8|16|32|64)</code></entry>
                    </row>
                    <row>
                        <entry>floating-point</entry>
                        <entry><code>NX_FLOAT(32|64)</code></entry>
                    </row>
                    <row>
                        <entry>array</entry>
                        <entry><code>(\[0-9\])?</code></entry>
                    </row>
                    <row>
                        <entry>valid item name</entry>
                        <entry><code>^[A-Za-z_][A-Za-z0-9_]*$</code></entry>
                    </row>
                    <row>
                        <entry>valid class name</entry>
                        <entry><code>^NX[A-Za-z0-9_]*$</code></entry>
                    </row>
                </tbody>
                
            </tgroup>
        </table>
        <para>
            NeXus supports numeric data as either integer or floating-point
            numbers.  A number follows that indicates the number of bits in the word.
            The table above shows the regular expressions that
            matches the data type specifier.
            <glosslist>
                <glossentry>
                    <glossterm>integers</glossterm>
                    <glossdef>
                        <para>
                            <code>NX_INT8</code>,
                            <code>NX_INT16</code>,
                            <code>NX_INT32</code>,
                            or
                            <code>NX_INT64</code>
                        </para>
                    </glossdef>
                </glossentry>
                <glossentry>
                    <glossterm>floating-point numbers</glossterm>
                    <glossdef>
                        <para>
                            <code>NX_FLOAT32</code>
                            or 
                            <code>NX_FLOAT64</code>
                        </para>
                    </glossdef>
                </glossentry>
                <glossentry>
                    <glossterm>date / time stamps</glossterm>
                    <glossdef>
                        <para>
                            <code>NX_DATE_TIME</code>
                            or 
                            <code>ISO8601</code>: 
                            Dates and times are specified using 
                            ISO-8601 standard definitions.
                            <indexterm><primary>date and time</primary></indexterm>
                            Refer to <xref linkend="NeXus.dates.times"/>.
                        </para>
                    </glossdef>
                </glossentry>
                <glossentry>
                    <glossterm>strings</glossterm>
                    <glossdef>
                        <para>
                            TODO Comment about strings
                        </para>
                    </glossdef>
                </glossentry>
                <glossentry>
                    <glossterm>binary data</glossterm>
                    <glossdef>
                        <para>
                            TODO Comment about binary data
                        </para>
                    </glossdef>
                </glossentry>
                <glossentry>
                    <glossterm>images</glossterm>
                    <glossdef>
                        <para>
                            TODO Comment about images
                        </para>
                    </glossdef>
                </glossentry>
            </glosslist>
        </para>
    </section>
    
    <!-- 
        ========================================
        section: Rules for storing data in Files
        ========================================
    -->
    <xi:include href="rules.xml"/>
    
    <!-- 
        ========================================
        section: Short mention of the Physical File formats
        ========================================
    -->
    <xi:include href="fileformat.xml"/>
</chapter>

<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"?>
<!-- # $Id$ -->
<chapter xml:id="DesignSection" xmlns="http://docbook.org/ns/docbook" version="5.0"
    xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>NeXus Design</title>
    <para>The structure of NeXus files is extremely flexible, allowing the storage both of
        simple data sets, e.g., a single data array and its axes, and also of highly complex
        data, e.g., the simulation results of an entire multi-component instrument. This
        flexibility is achieved through a hierarchical structure, with related data items
        collected together into groups, making NeXus files easy to navigate, even without any
        documentation. NeXus files are self-describing, and should be easy to understand, at
        least by those familiar with the experimental technique.</para>
    <para>The logical design is distinct from the underlying format used to store the NeXus file
        on disk, which are written using the <link xmlns:xlink="http://www.w3.org/1999/xlink"
            xlink:href="#ApplicationProgramInterfaceSection">NeXus Application Program Interface
            (API)</link>. Refer to the API documentation in
        <xref linkend="ApplicationProgramInterfaceChapter"/>
        for more details.</para>
    <section>
        <title>NeXus Objects</title>
        <para>NeXus data files contain two types of elementary object: data items and data
            groups. In addition, metadata required to describe a data item, e.g. 
            its physical units,
            <indexterm><primary>units</primary></indexterm>
            can be attached to the data as data attributes.
            <indexterm><primary>attributes</primary><secondary>data</secondary></indexterm>
        </para>
        <section>
            <title>Data Items</title>
            <para>Data items contain the essential information stored in a NeXus file. They can
                be scalar values or multidimensional arrays of a variety of sizes (1-byte,
                2-byte, 4-byte, 8-byte) and types (integers, floats, characters). The items may
                store both experimental results (counts, detector angles, etc), and other
                information associated with the experiment (start and end times, user names,
                etc). Data items are identified by their names, which must be unique within the
                group in which they are stored.</para>
        </section>
        <section>
            <title>Data Attributes</title>
            <para>Attributes 
                <indexterm significance="preferred"><primary>attributes</primary></indexterm>
                are extra (meta-)information that are associated with particular
                data items. They are used to annotate the data, e.g. with physical units <indexterm>
                    <primary>units</primary>
                </indexterm> or calibration offsets, and may be scalar numbers or character
                strings. In addition, NeXus uses attributes to identify plottable data and their
                axes, etc. Finally, NeXus files themselves have global attributes 
                <indexterm><primary>attributes</primary><secondary>global</secondary></indexterm>
                that identify
                the NeXus version, file creation time, etc.. Attributes are identified by their
                names, which must be unique in each data item.</para>
        </section>
        <section>
            <title>Data Groups</title>
            <para>NeXus files consist of data groups, which contain data items and/or other
                groups to form a hierarchical structure. This hierarchy is designed to make it
                easy to navigate a NeXus file by storing related data items together. Data
                groups are identified both by a name, which must be unique within a particular
                group, and a class. There can be multiple groups with the same class.</para>
        </section>
    </section>
    <section>
        <title>NeXus Classes</title>
        <para>Data groups often describe objects in the experiment (monitors, detectors,
            monochromators, etc.), so that the contents (both data items and/or other data
            groups) comprise the properties of that object. NeXus has defined a set of standard
            objects, or classes, out of which a NeXus file can be constructed. Each data group
            is therefore identified by a name and a class. The group class, which always has
            "NX" as a prefix, defines the type of object and the properties that it can contain,
            whereas the group name defines a unique instance of that class. These classes are
            defined in XML using the NeXus Definition Language (NXDL) <indexterm>
                <primary>NXDL</primary>
            </indexterm> format. </para>
        <para>Not all classes define physical objects. Some refer to logical groupings of
            experimental information, such as plottable data, sample environment logs, beam
            profiles, etc.</para>
        <para>The following table shows the hierarchy of a standard NeXus file, and where groups
            of a particular class are located. There can be multiple instances of each class. On
            the other hand, a typical NeXus file will only contain a small subset of the
            possible classes.</para>
        <section>
            <title>NeXus Data</title>
            <para>One NeXus design aim <indexterm>
                    <primary>NeXus</primary>
                    <secondary>design aims</secondary>
                </indexterm> was to make it possible to separate the measured data in a NeXus
                file from all the metadata that describe how that measurement was performed. In
                principle, it should be possible for a plotting utility to identify the
                plottable data automatically (or to provide a list of choices if there is more
                than one set of data). In order to distinguish the actual measurements from this
                metadata, it is stored separately in groups with the class <code>NXdata</code>.
                These groups encapsulate all the information required to produce a meaningful
                plot, including any error arrays and axis scales, i.e. the physical values
                corresponding to the data dimensions.</para>
            <para>The <code>NXdata</code> groups have to be flexible enough to cope with data of
                arbitrary rank and provide a mechanism for associating axis scales with the
                appropriate dimension of data. We use data attributes to accomplish this. Here
                are the main rules that must be followed in constructing an <code>NXdata</code>
                group. <itemizedlist>
                    <listitem>
                        <para>Each <code>NXdata</code> group will consist of only one data set
                            containing plottable data and their standard deviations.</para>
                    </listitem>
                    <listitem>
                        <para>The data set will be identified by an attribute of "signal" given
                            a value 1. </para>
                    </listitem>
                    <listitem>
                        <para>This data set may be of arbitrary rank. </para>
                    </listitem>
                </itemizedlist> If available, the standard deviations of the data are to be
                stored in a data set of the same rank and dimensions, with the name "errors". <itemizedlist>
                    <listitem>
                        <para>For each data dimension, there should be a one-dimensional array
                            of the same length. </para>
                    </listitem>
                    <listitem>
                        <para>These one-dimensional arrays are the "dimension scales" of the
                            data i.e. the values of the independent variables at which the data
                            is measured e.g. scattering angle or energy transfer. </para>
                    </listitem>
                </itemizedlist></para>
            <para>There are two methods of linking <indexterm>
                    <primary>link</primary>
                </indexterm> each data dimension to its respective dimension scale. <orderedlist>
                    <listitem>
                        <para> The first method is to define an attribute of each dimension
                            scale called "axis". It is an integer whose value is the number of
                            the dimension, in order of fastest varying dimension. i.e. if the
                            array being stored is data, with elements data[j][i] in C and
                            data(i,j) in Fortran, where i is the time-of-flight index and j is
                            the polar angle index, the <code>NXdata</code> group would contain : <example>
                                <title>Old way of denoting axes</title>
                                <programlisting  language="xml" linenumbering="numbered"
                                    ><xi:include href="examples/axes-old.xml.txt" 
                                        parse="text"/></programlisting>
                            </example> This attribute must be defined for each dimension scale.
                        </para>
                    </listitem>
                    <listitem>
                        <para>The second method is to define an attribute of the data itself
                            called "axes". It contains the names of each dimensions scale as a
                            comma- or colon-delimited list in the order they appear in C.
                            Optionally, the list can be enclosed in brackets, but should not
                            contain any spaces, e.g. <example>
                                <title>Preferred way of denoting axes</title>
                                <programlisting  language="xml" linenumbering="numbered"
                    ><xi:include href="examples/axes-preferred.xml.txt" parse="text"
                    /></programlisting>
                            </example></para>
                    </listitem>
                </orderedlist> The second method is required when the dimension scale is used in
                more than one <code>NXdata</code> group in a different context, e.g. it is used
                as the x-axis in one group and the y-axis in another. </para>
            <para>The first method was historically the first to be used, but the second is now
                recommended for future applications. However, both will be supported in NeXus
                utilities that identify dimension scales, e.g. NXUfindaxis. </para>
            <para>There are limited circumstances in which more than one dimension scale for the
                same data dimension can be included in the same <code>NXdata</code> group. The
                most common is when they are the three components of an (hkl) scan. In order to
                handle this case, we have defined another attribute of type integer called
                "primary" whose value determines the order in which the scale is expected to be
                chosen for plotting, i.e. 1st choice: primary = 1 2nd choice: primary = 2 etc.
                If there is more than one scale with the same value of the "axis" attribute, one
                of them must have the "primary" attribute set to 1. Defining the "primary"
                attribute for the other scales is optional.</para>
            <para>N.B. The "primary" attribute can only be used with the first method of
                defining dimension scales discussed above. In addition to the signal data, this
                group could contain a data set of the same rank and dimensions called "errors"
                containing the standard deviations of the data.</para>
            <para>It is often (usually) necessary to associate the data and/or axis scales with
                other metadata stored in other groups, e.g. the NXsample group or components of
                the NXinstrument group. For example, it may be necessary to perform corrections
                for the detector efficiency using information stored in the associated
                    <code>NXdetector</code> group. In this case, it is recommended that the
                relevant arrays are initially stored in those groups, and then linked <indexterm>
                    <primary>link</primary>
                </indexterm> to the <code>NXdata</code> group. The API will provide a mechanism
                for identifying the parent group so that the relevant metadata can be accessed. </para>
            <para>Here is a simple example to illustrate the concept: <example>
                <title>Abbreviated NeXus file</title>
                <programlisting  language="xml" linenumbering="numbered"
                    ><xi:include href="examples/abbreviated-nexus-file.xml.txt" parse="text"
                    /></programlisting>
                </example></para>
            <para>The general principle is that physical quantites are stored in the groups that
                they refer to (e.g. counts in <code>NXdetector</code>, temperature in NXsample)
                and these quantities are then linked into NXdata for interpretation. In this
                example, there are two axis scales, "magnetic_field" and "time_of_flight", which
                are stored in NXsample and <code>NXdetector</code> groups respectively. A
                program is able to use the information in the "link" attribute to locate the
                respective groups. One corollary of this is that there should be one
                    <code>NXdetector</code> group for each NXdata group, e.g. one for each
                detector bank in a multi-bank instrument.</para>
            <para>The syntax of the "link" attribute requires a bit of explanation. Under HDF4
                you can only create, what would be called under UNIX, "hard links". Hard links
                have the characteristics that: <itemizedlist>
                    <listitem>
                        <para>The name of the entity must be the same in both the original and
                            linked groups </para>
                    </listitem>
                    <listitem>
                        <para>The attributes of both the origial entity and the linked one are
                            the same </para>
                    </listitem>
                    <listitem>
                        <para>You cannot distinguish the original entity from the linked
                            one</para>
                    </listitem>
                    <listitem>
                        <para>You cannot follow a link - it is like an inode in a filesystem and
                            just points at the data </para>
                    </listitem>
                </itemizedlist></para>
            <para>To overcome this and allow us to link from <code>NXdata</code> to, say,
                    <code>NXsample</code> and to know that the original data belongs to
                    <code>NXsample</code> we write the "link" attribute that contains the path
                of the original group containing it. All linked entities will share this "link"
                attribute and thus can use it to locate the original source group. We are
                effectively using the "link" attribute to simulate "symbolic links". So in the
                above example both the original "time_of_flight" and the linked one will share a
                link attribute containing the text "/entry/instrument/detector" because
                "/entry/instrument/detector/time_of_flight" is the original instance.</para>
        </section>
        <section>
            <title>NeXus Attributes</title>
            <table role="small">
                <title>
                    Global Attributes
                    <indexterm><primary>attributes</primary><secondary>global</secondary></indexterm>
                </title>
                <tgroup cols="3" align="left" colsep="1" rowsep="1">
                    <colspec colwidth="1*"/>
                    <colspec colwidth="1*"/>
                    <colspec colwidth="3*"/>
                    <thead>
                        <row>
                            <entry><?dblatex bgcolor="[gray]{0.8}"?>Name</entry>
                            <entry><?dblatex bgcolor="[gray]{0.8}"?>Type</entry>
                            <entry><?dblatex bgcolor="[gray]{0.8}"?>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>file_name</entry>
                            <entry>NX_CHAR</entry>
                            <entry>File name of original NeXus file to assist in identification
                                if the external name has been changed</entry>
                        </row>
                        <row>
                            <entry>file_time</entry>
                            <entry>ISO 8601</entry>
                            <entry>Date and time of file creation</entry>
                        </row>
                        <row>
                            <entry>file_update_time</entry>
                            <entry>ISO 8601</entry>
                            <entry>Date and time of last file change at close</entry>
                        </row>
                        <row>
                            <entry>NeXus_version</entry>
                            <entry>NX_CHAR</entry>
                            <entry>Version of NeXus API used in writing the file</entry>
                        </row>
                        <row>
                            <entry>creator</entry>
                            <entry>NX_CHAR</entry>
                            <entry>Facility or program where the file originated</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <table role="small">
                <title>
                    Data Attributes
                    <indexterm><primary>attributes</primary><secondary>data</secondary></indexterm>
                </title>
                <tgroup cols="3" align="left" colsep="1" rowsep="1">
                    <colspec colwidth="1*"/>
                    <colspec colwidth="1*"/>
                    <colspec colwidth="3*"/>
                    <thead>
                        <row>
                            <entry><?dblatex bgcolor="[gray]{0.8}"?>Name</entry>
                            <entry><?dblatex bgcolor="[gray]{0.8}"?>Type</entry>
                            <entry><?dblatex bgcolor="[gray]{0.8}"?>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>units</entry>
                            <entry>NX_CHAR</entry>
                            <entry>
                                <para> Data units, 
                                    <indexterm><primary>units</primary></indexterm>
                                    given as character strings,
                                    must conform to the NeXus units standard.  
                                    See the 
                                    <link xmlns:xlink="http://www.w3.org/1999/xlink"
                                        xlink:href="#NeXus_units"
                                        >"NeXus units"</link> section for details. </para>
                            </entry>
                        </row>
                        <row>
                            <entry>signal</entry>
                            <entry>NX_INT32</entry>
                            <entry>Defines which data set contains the signal to be plotted -
                                set to 1 for main signal</entry>
                        </row>
                        <row>
                            <entry>axes</entry>
                            <entry>NX_CHAR</entry>
                            <entry>Defines the names of the dimension scales for this data set
                                as a comma-delimited array, optionally surrounded by brackets
                                (see a longer discussion in the section on NXdata structure)
                                i.e. if the array being stored is <code>data</code>, with
                                elements <code>data[j][i]</code> in C and <code>data(i,j)</code>
                                in Fortran, with dimension scales <code>time_of_flight[i]</code>
                                and <code>polar_angle[j]</code>, <code>data</code> would have an
                                attribute called "axes" with the following value :
                                    <code>[polar_angle,time_of_flight]</code></entry>
                        </row>
                        <row>
                            <entry>axis</entry>
                            <entry>NX_INT32</entry>
                            <entry>As an alternative to using the "axes" attribute, this defines
                                the rank of the signal data for which this data set is a
                                dimension scale in order of the fastest varying index (see a
                                longer discussion in the section on NXdata structure) i.e. if
                                the array being stored is <code>data</code>, with elements
                                    <code>data[j][i]</code> in C and <code>data(i,j)</code> in
                                Fortran, "axis" would have the following values: ith dimension
                                (axis = 1), jth dimension (axis = 2), etc. </entry>
                        </row>
                        <row>
                            <entry>primary</entry>
                            <entry>NX_INT32</entry>
                            <entry>Defines the order of preference for dimension scales which
                                apply to the same rank of signal data - set to 1 for preferred
                                dimension scale</entry>
                        </row>
                        <row>
                            <entry>long_name</entry>
                            <entry>NX_CHAR</entry>
                            <entry>Defines title of signal data or axis label of dimension
                                scale</entry>
                        </row>
                        <row>
                            <entry>calibration_status</entry>
                            <entry>NX_CHAR</entry>
                            <entry>Defines status of data value - set to "Nominal" or
                                "Measured"</entry>
                        </row>
                        <row>
                            <entry>histogram_offset</entry>
                            <entry>NX_FLOAT32</entry>
                            <entry>Defines the offset from the first data point to its bin
                                boundary. i.e. left_bin = data[1] - histogram_offset - set to 0
                                if the data are not histograms. The points themselves should be
                                set to the bin centers. For reasoning behind this design, see
                                note on histograms.</entry>
                        </row>
                        <row>
                            <entry>checksum</entry>
                            <entry>NX_INT32</entry>
                            <entry>Sum of data array acting as a check on data integrity</entry>
                        </row>
                        <row>
                            <entry>version</entry>
                            <entry>NX_CHAR</entry>
                            <entry>Version of XML DTD file or schema on which the NeXus file is
                                based. Should only be used with the "analysis" data item in an
                                    <literal>NXentry</literal> group.</entry>
                        </row>
                        <row>
                            <entry>URL</entry>
                            <entry>NX_CHAR</entry>
                            <entry>The URL of the XML DTD file or schema on which the NeXus file
                                is based. Should only be used with the "analysis" data item in
                                an <literal>NXentry</literal> group.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
    </section>
    <section xml:id="NeXus_Coordinate_System">
        <title>
            NeXus Coordinate System
            <indexterm><primary>geometry</primary></indexterm>
        </title>
        <para> Nexus provides two coordinate systems: a <link
                xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#NXgeometrySection"
            ><literal>NXgeometry</literal> based system</link> 
            for physical coordinates of beamline components
            and a <link xmlns:xlink="http://www.w3.org/1999/xlink"
                xlink:href="#Spherical_coordinate_system">
                <citetitle>polar coordinate based system</citetitle>
            </link> for scattering coordinates. 
            The usage of these two systems can be seen by
            considering a <superscript>3</superscript>He gas tube detector: </para>
        <itemizedlist mark="opencircle">
            <listitem>
                <para> The <link xmlns:xlink="http://www.w3.org/1999/xlink"
                    xlink:href="#NXgeometry_based_system"><literal>NXgeometry</literal> 
                    system</link>
                    represents true spatial location and would describe 
                    a cylinder at a certain
                    distance from the sample that never changes from one 
                    run to another </para>
            </listitem>
            <listitem>
                <para> The <link xmlns:xlink="http://www.w3.org/1999/xlink"
                        xlink:href="#Spherical_coordinate_system">
                        <citetitle>polar system</citetitle>
                </link> would describe the scattering, rather than actual, 
                    geometry. <indexterm><primary>geometry</primary></indexterm>
                    For
                    example, the <emphasis>distance</emphasis> coordinate would refer to the
                    distance from the sample to an effective measurement point within the gas
                    tube, which would depend on neutron energy; lower energy neutrons would tend
                    to penetrate a smaller distance within the tube, and so have a shorter
                    secondary flight path. </para>
            </listitem>
        </itemizedlist>
        <section xml:id="Spherical_coordinate_system">
            <title>
                Simple (Spherical Polar) Coordinate System
                <indexterm><primary>geometry</primary></indexterm>
            </title>
            <para> In this system the instrument is considered as a set of components through
                which the incident beam passes. The variable <emphasis role="bold"
                    >distance</emphasis> is assigned to each component and represents the
                effective beam flight path length between this component and the sample. A sign
                convention is used where -ve numbers represent components pre-sample and +ve
                numbers components post-sample. </para>
            <para> For angular information, the quantities <emphasis>polar_angle</emphasis> and
                    <emphasis>azimuthal_angle</emphasis> are used and these quantities
                correspond exactly to the usual <link xmlns:xlink="http://www.w3.org/1999/xlink"
                    xlink:href="#Spherical_coordinate_system">
                    <citetitle>spherical polar coordinate</citetitle>
                </link> definitions i.e. the polar_angle is the <emphasis>zenith
                    angle</emphasis> and measured with respect to a <emphasis>z</emphasis> axis
                and the azimuthal_angle to the <emphasis>x</emphasis> axis in the xy plane. The
                direction of these local axes may be different for each component:
                    <emphasis>z</emphasis> is the incident beam direction for the <emphasis
                    role="bold">previous</emphasis> component and we then follow <link
                    xmlns:xlink="http://www.w3.org/1999/xlink"
                    xlink:href="http://mcstas.risoe.dk">
                    <citetitle>McStas</citetitle>
                    <indexterm>
                        <primary>McStas</primary>
                    </indexterm>
                </link> for <emphasis>x</emphasis> and <emphasis>y</emphasis> i.e. the
                    <emphasis>x</emphasis> axis is perpendicular to the beam in the horizontal
                plane pointing left as seen from the source, and the <emphasis>y</emphasis> axis
                points upwards (see diagram below). The <emphasis>z</emphasis> axis thus
                represents the direction of the beam if it was un-deviated by the previous
                component, and so the polar_angle and azimuthal_angle for a component indicate
                how much the beam was bent/scattered by the previous component. </para>
            <para> If we consider an <code>NXdetector</code> element placed directly after an
                NXsample, the <emphasis>z</emphasis> axis would be in the direction of the beam
                incident on NXsample. The polar_angle for the <code>NXdetector</code> would be
                the angle between the scattered beam and this <emphasis>z</emphasis> axis and so
                correspond to the <emphasis>Bragg angle</emphasis> or <emphasis>two
                    theta</emphasis> even for out-of-plane scattering. The azimuthal_angle would
                be the angle between the positive x-axis and the scattered beam projected onto
                the xy-plane - scattering to the left as seen from the source would have
                azimuthal_angle=0 and scattering to the right azimuthal_angle=pi. The distance
                would correspond to what is often called the <emphasis>secondary flight path
                    length</emphasis> or <emphasis>L2</emphasis>. </para>
        </section>
        <section xml:id="NXgeometry_based_system">
            <title>
                <literal>NXgeometry</literal> based system
                <indexterm><primary>geometry</primary></indexterm>
            </title>
            <para> This coordinate system is based more fully on the <link
                    xmlns:xlink="http://www.w3.org/1999/xlink"
                    xlink:href="http://mcstas.risoe.dk">
                    <citetitle>McStas coordinate system</citetitle>
                    <indexterm>
                        <primary>McStas</primary>
                    </indexterm>
                </link>. The instrument is given a global, absolute coordinate system where the
                    <emphasis>z</emphasis> axis points in the direction of the incident beam,
                the <emphasis>x</emphasis> axis is perpendicular to the beam in the horizontal
                plane pointing left as seen from the source, and the <emphasis>y</emphasis> axis
                points upwards. Each beamline component also has a local coordinate system,
                which is defined by the <link xmlns:xlink="http://www.w3.org/1999/xlink"
                    xlink:href="#NXgeometrySection"><literal
                        >NXgeometry</literal></link> object. The local
                    <emphasis>z</emphasis> direction for a component is taken as the incident
                beam direction, with <emphasis>x</emphasis> and <emphasis>y</emphasis> defined
                as before (<emphasis>i.e.</emphasis> the <emphasis>x</emphasis> axis is
                perpendicular to the beam in the horizontal plane pointing left as seen from the
                source, and the <emphasis>y</emphasis> axis points upwards). Information about
                these coordinate systems and the placement of components is described by the
                    <link xmlns:xlink="http://www.w3.org/1999/xlink"
                    xlink:href="#NXgeometrySection">NXgeometry</link> class via its
                    <code>NXtranslation</code> and <code>NXorientation</code> members. </para>
            <para>
                <figure>
                    <title>
                        Definition of translation and orientation geometry
                        <indexterm><primary>geometry</primary></indexterm>
                    </title>
                    <informaltable>
                        <!--TODO: <title>Figure AND table?</title>-->
                        <tgroup cols="2">
                            <tbody>
                                <row>
                                    <entry>
                                        <mediaobject>
                                            <imageobject>
                                              <imagedata
                                              fileref="img/translation-orientation-geometry.jpg"
                                              width="200pt" scalefit="1"/>
                                            </imageobject>
                                            <caption>
                                              <para>view from source</para>
                                            </caption>
                                        </mediaobject>
                                    </entry>
                                    <entry>
                                        <mediaobject>
                                            <imageobject>
                                              <imagedata
                                              fileref="img/translation-orientation-geometry-2.jpg"
                                              width="200pt" scalefit="1"/>
                                            </imageobject>
                                            <caption>
                                              <para>view from detector</para>
                                            </caption>
                                        </mediaobject>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                </figure>
            </para>
            <!-- TODO
                This additional note needs to be converted into 
                the proper form for the manual:
                In NeXus, we never came down to defining 
                rotation directions. The triple polar_angle, 
                azimuthal_angle and distance define a polar 
                coordinate system. Polar_angle is ALWAYS two-theta, 
                even if the detector does not happen to live in
                the scattering plane. The azimuthal_angle defines 
                by how much the plane in which the 0 point of 
                the drawing and the blue point live is tilted 
                towards the scattering plane.
                See the drawing at img/polplane.png.
                =======================================
                The sign of the rotations as shown in the 
                translation-orientation-geometry.jpg
                drawing is technically correct although instrument 
                scientists might debate whether it is sensible.  
                (For example, an increasing Bragg angle for a 
                vertical reflection where the beam is bouncing 
                upwards seems as if it should be positive but 
                the proper sense of this x', or pitch, rotation 
                must be negative if one wishes to obey the 
                right-hand rule.)  A review of what is written 
                in the International Tables for Crystallography 
                volume G might be in order to resolve this.
                =======================================
                * polar_angle - rotation x' about the X axis
                * azimuthal_angle - rotation z' about the Z axis
                * rotation_angle - rotation y' about the Y axis
            -->
            <note>
                <para>The NeXus definition of <literal>+z</literal> is opposite to that
                    in the International Tables for Crystallography, 
                    volume G, and consequently, <literal>+x</literal> is also reversed.</para>
            </note>
            <para> When computing a transformation, <code>NXtranslation</code> is applied before
                    <code>NXorientation</code>. All of our axes are right handed and orthogonal.
                Orientation information is stored as direction cosines. The direction cosines
                will be between the local coordinate directions and the reference directions (to
                origin or relative <link xmlns:xlink="http://www.w3.org/1999/xlink"
                    xlink:href="#NXgeometrySection">NXgeometry</link>). Calling the local unit
                vectors (x',y',z') and the reference unit vectors (x,y,z) the six numbers will
                be [x' dot x, x' dot y, x' dot z, y' dot x, y' dot y, y' dot z] where "dot" is
                the scalar dot product (cosine of the angle between the unit vectors). The unit
                vectors in both the local and reference coordinates are right-handed and
                orthonormal: with this restriction we only ned to store 6 rather than 9
                direction cosines as the z' axis can be obtained by the vector cross product of
                x' and y'.</para>
            <para> The origin of coordinates is arbitrary, but all components in the file must
                either agree on its absolutelocation or use relative positioning. To allow for
                this generality, an origin member can be defined in <code>NXentry</code>; its
                use will be detailed shortly. </para>
            <para> We choose as our absolute the origin the scattering center, which is where a
                perfectly aligned sample would be. Note that the centre of the sample itself may
                not always be at this point if the sample is being scanned across the beam. With
                an origin at the <emphasis>scattering centre</emphasis> the spherical polar
                coordinate specifications of the detector positions conveniently relates to
                scattering angles and lengths for direct geometry instruments. </para>
            <para> Individual components of the instrument (e.g. jaws) will have their own set
                of local axes (x,y,z) which will be fixed to their body in a way defined by
                their shape. These local axes will probably not coincidewith the global
                instrument axes and so a set of rotation angles will also need to be stored. For
                this an <link xmlns:xlink="http://www.w3.org/1999/xlink"
                    xlink:href="#NXgeometrySection"><literal
                        >NXgeometry</literal></link> class is defined, along
                with <literal>NXtranslation</literal> and <literal>NXorientation</literal>; 
                the hope is to provide a 
                method sufficiently general for relating the
                location of any object with respect to another object.
                The mechanism also allows for specifying one position relative to another
                component: a NeXus file link
                <indexterm><primary>link</primary></indexterm>
                is made in one instance of an <link
                    xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#NXgeometrySection"
                    >NXgeometry</link> object to another <link
                    xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#NXgeometrySection"
                    >NXgeometry</link> object and a program can then traverse the chain of links
                to calculate an absolute position. </para>
            <para> NeXus does not need to define absolutely where to place the
                    <emphasis>origin</emphasis>. All components can instead bedeclared with a
                relative position that ultimately follows a chain back to one object; this will
                be named<emphasis>origin1</emphasis>, be of class <link
                    xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#NXgeometrySection"
                    ><literal>NXgeometry</literal></link> and a member of 
                <literal>NXentry</literal>. The real space
                location of this origin is chosen for convenience and should be mentioned in the
                description attached to <literal>origin1</literal>. If the origin is taken at
                the sample, then <literal>sample.geometry.distance</literal> will always be
                (0,0,0) relative to <literal>origin1</literal>; if the origin is taken
                elsewhere this will not be so, but everything will still work. It may be
                convenient to define extra origins (similar to <emphasis>arms</emphasis> in
                    <link xmlns:xlink="http://www.w3.org/1999/xlink"
                    xlink:href="http://mcstas.risoe.dk">
                    <citetitle>McStas</citetitle>
                    <indexterm>
                        <primary>McStas</primary>
                    </indexterm>
                        <indexterm><primary>geometry</primary></indexterm>
                </link>) at other parts of the instrument. For example,defining one at the
                centre of a circular array of detectors would allow their positions to be
                conveniently specified in spherical polar coordinates. Another possibility would
                be to define the sample relative to<emphasis>origin1</emphasis> and the
                detectors to <emphasis>origin2</emphasis>; the detectors could then be rotated
                by a rotation of <emphasis>origin2</emphasis> without modifying
                    <code>NXdetector</code>. </para>
            <para> As well as specifying the component location, it is also necessary to specify
                the beam direction. Unless otherwise given in an NXbeam member of the component,
                the incident beam is assumed to be travelling along (0,0,+z) in the coordinate
                system of the object (or origin) our position was defined relative to. Thus, for
                a component with absolute positioning the beam will always be in the incident
                beam direction unless specified by an NXbeam member. </para>
            <para>
                <emphasis role="bold">Size and Shape</emphasis> (NXshape) </para>
            <para>
                <!-- TODO -->
                <!-- =========================================================== -->
                <warning>
                    <para>Need some editing at this point!</para>
                </warning>
                <!-- =========================================================== --> Many
                instrument components define <emphasis>height</emphasis> and
                    <emphasis>width</emphasis> variables to specify their size when rectangular,
                a <emphasis>radius</emphasis> variable for when circular etc. Rather than all
                these different names, an alternative scheme is proposed based on the
                    <emphasis>shape</emphasis> of the object and the local coordinate axes this
                shape defines. All object would just need to specify a shape
                    (<emphasis>cuboid</emphasis>, <emphasis>cylinder</emphasis> etc.) and a size
                array. Specifying size[3] would give the dimensions of the object along its
                local (+-x,+-y,+-z) axes; specifying size[6] would give the extent along
                (+x,+y,+z,-x,-y,-z) and allow for e.g. asymmetric jaws where the reference point
                may not be the centre of the rectangle. For example take
                    shape=<emphasis>cylinder</emphasis>: the NXtranslation variable of position
                would define the location of the reference point for the origin of the local
                axes: <emphasis>z</emphasis> in the direction of the cylinder axis,
                    <emphasis>x</emphasis> and <emphasis>y</emphasis> in plane. With no rotation
                the object would be oriented with its local axes pointing in the direction of
                axes of the object it was defined relative to, but this can be altered with the
                NXorientation variable within position. If a size[3] array variable was
                specified, the reference point must be the centre of the cylinder and the
                dimension are size[0]=size[1]=radius, size[2]=length/2). If size[6] was
                specified then the reference point would be elsewhere in the object, with its
                distance from the cylinder edges along the various axes given byelements of the
                size[6] array. </para>
        </section>
    </section>
    <section xml:id="NeXus_units">
        <title>NeXus units</title>
        <para> NeXus units <indexterm significance="preferred">
                <primary>units</primary>
        </indexterm> are written as a string (<code>NX_CHAR</code>) 
            and describe the engineering units. The string
            should be appropriate for the value. 
            Values for the NeXus units must be specified in
            a format compatible with <link xmlns:xlink="http://www.w3.org/1999/xlink"
                xlink:href="http://www.unidata.ucar.edu/software/udunits/">Unidata
                UDunits</link>.  The UDunits specification also includes instructions 
            for derived units.
            <!-- 
                What about backwards compatibility with older NeXus data files?
                Since we do not check or validate the units, seems that we're covered.
                A comment here might suffice.
            -->
            <indexterm>
                <primary>UDunits</primary>
            </indexterm>
            <footnote>
                <para>Unidata UDunits: <link xmlns:xlink="http://www.w3.org/1999/xlink"
                        xlink:href="http://www.unidata.ucar.edu/software/udunits/"
                            ><literal>http://www.unidata.ucar.edu/software/udunits/</literal></link>
                </para>
            </footnote>
            <footnote>
                <para><code>udunits.txt</code> (deprecated): 
                    <link xmlns:xlink="http://www.w3.org/1999/xlink"
                        xlink:href="http://www.unidata.ucar.edu/software/udunits/"
                            ><literal>http://www.unidata.ucar.edu/software/udunits/udunits-1/udunits.txt</literal></link>
                </para>
            </footnote> utility (in particular, see the now-deprecated <link
                xmlns:xlink="http://www.w3.org/1999/xlink"
                xlink:href="http://www.unidata.ucar.edu/software/udunits/udunits-1/udunits.txt"
                    ><code>udunits.txt</code></link>). 
            At present, the content of the NeXus <literal>units</literal> attribute
            is not validated.
        </para>
    </section>
    <section xml:id="NeXus_dates_times">
        <title>NeXus dates and times</title>
        <para>
            NeXus dates and times should be stored using the 
            <link xlink:href="http://www.w3.org/TR/NOTE-datetime"
                >ISO 8601</link><footnote><para
                    >ISO8601: <link xlink:href="http://www.w3.org/TR/NOTE-datetime"
                        ><literal
                            >http://www.w3.org/TR/NOTE-datetime</literal
                        ></link></para></footnote>
            format e.g. <literal>1996-07-31 21:15:22+0600</literal>. 
            The standard also allows for time intervals in fractional seconds
            with <emphasis>1 or more digits of precision</emphasis>.
            This will avoid confusion, e.g. between U.S. and European conventions, 
            and is appropriate for machine sorting. 
        </para>
    </section>
    <section xml:id="NeXus_dimensions">
        <title>NeXus array dimensions</title>
        <para>Here are a couple of examples to get this section started: 
            <example>
                <title>Example of array dimensions.</title>
                <programlisting  language="xml" linenumbering="numbered"
                    ><xi:include href="examples/array-dimensions.xml.txt" parse="text"
                    /></programlisting>
            </example> 
            In some programming language, this would make data[i,j,k] and
            time-of-flight[k+1]. </para>
    </section>
    <section xml:id="NeXus_data_types">
        <title>NeXus Data Types</title>
        <para>placeholder</para>
    </section>
</chapter>

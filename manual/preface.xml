<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- # $Id$ -->
<preface xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <!--  xml:id="PrefaceChapter" - do not use since this file is loaded in each Volume -->
    <title>Preface</title>
    <para>
        <mediaobject>
            <imageobject>
                <imagedata fileref="img/NeXus.png" width="300pt" scalefit="1"/>
            </imageobject>
        </mediaobject>

        With this edition of the manual, NeXus introduces a complete version
        of the documentation of the NeXus standard.  The content from the wiki
        has been converted, augmented (in some parts significantly), clarified,
        and indexed.  The 
        NeXus Definition Language (NXDL) is introduced now
        to define base classes and 
        application definitions.  
        NXDL replaces the previous method (meta-DTD) to define NeXus classes.
        NeXus base classes and instrument definitions
        are now assigned to one of three classifications: 
        (1) <emphasis>bases classes</emphasis> (that represent the components used 
        to build a NeXus data file), 
        (2) <emphasis>application definitions</emphasis> (used to define a minimum 
        set of data for a specific purpose such as scientific data processing 
        or an instrument definition), 
        and
        (3) <emphasis>contributed definitions</emphasis> (definitions and specifications
        that are in an incubation status before reatification by the NIAC).
        Additional examples have been added to respond to
        inquiry from the users of the NeXus standard about implementation
        and usage.  Hopefully, the improved documentation with
        more examples and the new NXDL will reduce 
        the learning barriers incurred by those new to NeXus.
    </para>
    
    <section>
        <title>Representation of data examples</title>
        <para>
            Most of the examples of data files have been written in a format
            intended to show the structure of the file rathdr than the data content.
            In some cases, where it is useful, some of the data is shown.
            Consider this prototype example:
        </para>
        <figure xml:id="examples-prototype">
            <title>example of NeXus data</title>
            <programlisting linenumbering="numbered"
          ><xi:include href="examples/examples-prototype.txt" parse="text"
          /></programlisting>
        </figure>
        <para>
            Line 1 shows that there is one group at the root level of the file named
            <literal>entry</literal>.  This group is of type <literal>NXentry</literal>
            which means it conforms to the specification of the <literal>NXentry</literal>
            NeXus base class.  Using the HDF5 nomenclature, we would refer to this
            as the <literal>/entry</literal> group.  
        </para>
        <para>
            Lines 2, 10, and 12:
            The <literal>/entry</literal> group contains three subgroups:
            <literal>instrument</literal>, <literal>sample</literal>, and <literal>data</literal>.
            These groups are of type <literal>NXinstrument</literal>, <literal>NXsample</literal>, 
            and <literal>NXdata</literal>, respectively. 
        </para>
        <para>
            Line 4: The data of this example is stored in the
            <literal>/entry/instrument/detector</literal> group in the dataset called
            <literal>data</literal> (HDF5 path is <literal>/entry/instrument/detector/data</literal>).
            The indication of <literal>data:[]</literal> says that <literal>data</literal> is an
            array of unspecified dimension(s).
        </para>
        <para>
            Lines 5-7:
            There are three attributes of <literal>/entry/instrument/detector/data</literal>:
            <literal>axes</literal>, <literal>long_name</literal>, and <literal>signal</literal>.
        </para>
        <para>
            Line 8 (reading <literal>bins:[0, 1, 2, ... 1023]</literal>) shows that
            <literal>bins</literal> is a 1-D array of length presumably 1024.  A small,
            representative selection of values are shown.
        </para>
        <para>
            Line 9: an attribute that shows a descriptive name of 
            <literal>/entry/instrument/detector/bins</literal>.  This attribute
            might be used by a NeXus client while plotting the data.
        </para>
        <para>
            Line 11 (reading <literal>name = "hydroxyapatite"</literal>) shows 
            how a string value is represented.
        </para>
        <para>
            Lines 13-14:
            The <literal>/entry/data</literal>) group has two datasets that are actually
            linked as shown.  (As you will see later, the <literal>NXdata</literal> group
            is required and enables NeXus clients to easily determine what to
            offer for display on a default plot.)
        </para>
    </section>
    <section>
        <title>Class path specification</title>
        <para>
            In some places in this documentation, a path may be shown
            using the class types rather than names.  For example:
            <literal>/NXentry/NXinstrument/NXcrystal/wavelength</literal>
            identifies a dataset called <literal>wavelength</literal>
            that is inside a group of type <literal>NXcrystal</literal> ...
            This nomemclature is used when the exact name of each group is
            either unimportant or not specified.  Often, this will be used in
            a NXDL specification to indicate the connections of a link.
        </para>
    </section>

</preface>

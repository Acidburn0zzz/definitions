<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://definition.nexusformat.org/schema/3.1" 
	xmlns:nx="http://definition.nexusformat.org/schema/3.1"
	elementFormDefault="qualified">
<xs:annotation>
<xs:documentation>
# NeXus - Neutron and X-ray Common Data Format
# 
# Copyright (C) 2008 NeXus International Advisory Committee (NIAC)
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org

########### SVN repository information ###################

# $LastChangedDate$
# $LastChangedAuthor: Pete Jemian $
# $LastChangedRevisio: 284 $
# $HeadURL$
# $Id: NeXus.xsd 284 2009-01-23 04:18:00Z Pete Jemian $
########### SVN repository information ###################
			

  This file is included by all other NeXus schema and provides
  * Basic data types (NX_FLOAT32, ISO8601 etc.) are all defined in NeXus.xsd along with enumerations
    such as nx:validShape

  * Base classes are each defined in a separate *.xsd file (e.g. NXentry.xsd) 
    These files will include NeXus.xsd and any other NX*.xsd definitions they need
    Using separate files will hopefully make future changes easier for instrument editors etc.  

  * Instrument definitions will be created by redefining NXentry (via NXentryType) to change 
    the required components from optional (minOccurs="0") to mandatory (minOccurs="1")
    see PROCESSED.xsd for an example

  * Some object-orientated features have been added as they make definition writing easier and avoid duplication. For example:
    - an abstract NXchopper.xsd has been created that is inherited by NXdisc_chopper.xsd and NXfermi_chopper.xsd
    - all NeXus object inherit from nx:classBaseType (it just has a "name" attribute that all classes have)
    - beamline components inherit from nx:componentType that contains "distance" and NXgeometry members etc.
  
</xs:documentation>
</xs:annotation>
	
	<!-- used for allowed names of elements and attributes - need to be restricted to valid program variable names -->
	<xs:simpleType name="validName">
	  <xs:restriction base="xs:token">
	    <xs:maxLength value="50" />
	    <xs:pattern value="[A-Za-z0-9_]+" />
	  </xs:restriction>
	</xs:simpleType>


    <!-- valid shapes -->
	
	<xs:simpleType name="validShape">
	 <xs:restriction base="xs:string">
	  <xs:enumeration value="nxcylinder" />
	  <xs:enumeration value="nxbox" />
	  <xs:enumeration value="nxsphere" />
	 </xs:restriction>
	</xs:simpleType>

	<!-- NX_FLOAT32 -->
	<xs:simpleType name="float32">
	  <xs:restriction base="xs:float" />
	</xs:simpleType>
	<xs:simpleType name="float32Attr">
	  <xs:restriction base="xs:string">
	    <xs:pattern value="NX_FLOAT32:.*" />
	  </xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="float32Data">
	    <xs:list itemType="nx:float32" />
	</xs:simpleType>
	  
	<!-- NX_FLOAT64 -->
	<xs:simpleType name="float64">
	  <xs:restriction base="xs:double" />
	</xs:simpleType>
	<xs:simpleType name="float64Attr">
	  <xs:restriction base="xs:string">
	    <xs:pattern value="NX_FLOAT64:.*" />
	  </xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="float64Data">
	  <xs:list itemType="nx:float64" />
	</xs:simpleType>

	<!-- NX_FLOAT -->
	<xs:simpleType name="float">
	  <xs:restriction base="xs:double" />
	</xs:simpleType>
	<xs:simpleType name="floatAttr">
	  <xs:restriction base="xs:string">
	    <xs:pattern value="NX_FLOAT(64|32):.*" />
	  </xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="floatData">
	  <xs:list itemType="nx:float" />
	</xs:simpleType>

	<!-- NX_INT64 -->
	<xs:simpleType name="int64">
		<xs:restriction base="xs:long" />
	</xs:simpleType>
	<xs:simpleType name="int64attr">
		<xs:restriction base="xs:string">
			<xs:pattern value="NX_INT64:[+\-]?\d+" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="int64Data">
		<xs:list itemType="nx:int64" />
	</xs:simpleType>
	
	<!-- NX_INT32 -->
	<xs:simpleType name="int32">
	  <xs:restriction base="xs:int" />
	</xs:simpleType>
	<xs:simpleType name="int32attr">
	  <xs:restriction base="xs:string">
	    <xs:pattern value="NX_INT32:[+\-]?\d+" />
	  </xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="int32Data">
	  <xs:list itemType="nx:int32" />
	</xs:simpleType>

	<!-- NX_INT16 -->
	<xs:simpleType name="int16">
		<xs:restriction base="xs:int" />
	</xs:simpleType>
	<xs:simpleType name="int16attr">
		<xs:restriction base="xs:string">
			<xs:pattern value="NX_INT16:[+\-]?\d+" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="int16Data">
		<xs:list itemType="nx:int16" />
	</xs:simpleType>

	<!-- NX_INT8 -->
	<xs:simpleType name="int8">
		<xs:restriction base="xs:int" />
	</xs:simpleType>
	<xs:simpleType name="int8attr">
		<xs:restriction base="xs:string">
			<xs:pattern value="NX_INT8:[+\-]?\d+" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="int8Data">
		<xs:list itemType="nx:int8" />
	</xs:simpleType>
	
	<!-- NX_INT -->
	<xs:simpleType name="int">
		<xs:restriction base="xs:long" />
	</xs:simpleType>
	<xs:simpleType name="intAttr">
		<xs:restriction base="xs:string">
			<xs:pattern value="NX_INT(8|16|32|64):[+\-]?\d+" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="intData">
		<xs:list itemType="nx:int" />
	</xs:simpleType>

	<!-- NX_CHAR -->
	<xs:simpleType name="char">
	  <xs:restriction base="xs:string" />
	</xs:simpleType>
	<xs:simpleType name="charAttr">
	  <xs:restriction base="xs:string" />
	</xs:simpleType>
	<xs:simpleType name="charData">
	  <xs:restriction base="xs:string" />
	</xs:simpleType>

	<!-- NX_CHAR holding an ISO 8601 date string -->
	<xs:simpleType name="ISO8601">
	  <xs:restriction base="xs:dateTime">
	    <!-- may want to allow T or space here; also trailing .* needs to be updated for correct time zone structure -->
		<xs:pattern value="\d\d\d\d-\d\d-\d\d[T ]\d\d:\d\d:\d\d.*" />
	  </xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ISO8601Attr">
		<xs:restriction base="xs:dateTime">
			<xs:pattern value="\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d" />
		</xs:restriction>
	</xs:simpleType>
	
	<!-- Valid strings describing data types that can be contained in a NAPItype attribute -->
	<xs:simpleType name="NAPITypes">
	  <xs:restriction base="xs:string">
	  	<!--xs:pattern value="NX_(CHAR|FLOAT32|FLOAT64|INT8|INT16|INT32|INT64)\[.*\]" /--> 	
	  	<xs:pattern value="NX_(CHAR|FLOAT32|FLOAT64|INT8|INT16|INT32|INT64).*" /> 	
	  </xs:restriction>
	</xs:simpleType>

	<!-- valid units for various things -->
	
	<xs:simpleType name="unit">
		<xs:restriction base="nx:charAttr" />
	</xs:simpleType>
	
	<xs:simpleType name="lengthUnit">
		<xs:restriction base="nx:unit">
			<xs:enumeration value="metre" />	    
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="wavelengthUnit">
		<xs:restriction base="nx:unit">
			<xs:enumeration value="angstroms" />	    
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="timeUnit">
		<xs:restriction base="nx:unit">
			<xs:enumeration value="second" />
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="frequencyUnit">
		<xs:restriction base="nx:unit">
			<xs:enumeration value="hertz" />
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="angleUnit">
		<xs:restriction base="nx:unit">
			<xs:enumeration value="radian" />
			<xs:enumeration value="degree" />
		</xs:restriction>
	</xs:simpleType>
	

	<!-- Attributes of elements that are not classes i.e. that can contain floats, chars etc -->
	<xs:attributeGroup name="standardDataAttributes">
	  <xs:attribute name="units" type="nx:unit" />
	<!-- allow user defined attributes -->
	<xs:anyAttribute namespace="##any" processContents="lax" />
	</xs:attributeGroup>

	<!-- An NX_FLOAT64 item -->
	<xs:complexType name="float64DataType">
		<xs:simpleContent>
			<xs:extension base="nx:float64Data">
				<xs:attributeGroup ref="nx:standardDataAttributes" /> 
				<!-- xs:attribute name="name" use="prohibited" / -->
				<xs:attribute name="NAPItype" use="required" >
					<xs:simpleType>
						<xs:restriction base="nx:NAPITypes">
							<!--xs:pattern value="NX_FLOAT64\[.*\]" /-->					
							<xs:pattern value="NX_FLOAT64.*" />					
						</xs:restriction>
					</xs:simpleType>	
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- An NX_FLOAT32 item -->
	<xs:complexType name="float32DataType">
		<xs:annotation><xs:documentation>NX_FLOAT32</xs:documentation></xs:annotation>
		<xs:simpleContent>
			<xs:extension base="nx:float32Data">
				<xs:attributeGroup ref="nx:standardDataAttributes" /> 
				<!-- xs:attribute name="name" use="prohibited" / -->
				<xs:attribute name="NAPItype" use="required" >
				<xs:simpleType>
					<xs:restriction base="nx:NAPITypes">
						<!--xs:pattern value="NX_FLOAT32\[.*\]" /-->					
						<xs:pattern value="NX_FLOAT32.*" />					
					</xs:restriction>
				</xs:simpleType>	
			</xs:attribute>
		</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- An NX_FLOAT item -->
	<xs:complexType name="floatDataType">
		<xs:annotation><xs:documentation>NX_FLOAT</xs:documentation></xs:annotation>
		<xs:simpleContent>
			<xs:extension base="nx:floatData">
				<xs:attributeGroup ref="nx:standardDataAttributes" /> 
				<!-- xs:attribute name="name" use="prohibited" / -->
				<xs:attribute name="NAPItype" use="required" >
				<xs:simpleType>
					<xs:restriction base="nx:NAPITypes">
						<!--xs:pattern value="NX_FLOAT32\[.*\]" /-->					
						<xs:pattern value="NX_FLOAT(32|64).*" />					
					</xs:restriction>
				</xs:simpleType>	
			</xs:attribute>
		</xs:extension>
		</xs:simpleContent>
	</xs:complexType>


	<!-- An NX_INT64 item -->
	<xs:complexType name="int64DataType">
		<xs:simpleContent>
			<xs:extension base="nx:int64Data">
				<xs:attributeGroup ref="nx:standardDataAttributes" /> 
				<xs:attribute name="NAPItype" use="required" >
					<xs:simpleType>
						<xs:restriction base="nx:NAPITypes">
							<!--xs:pattern value="NX_INT64\[.*\]" /-->					
							<xs:pattern value="NX_INT64.*" />					
						</xs:restriction>
					</xs:simpleType>	
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	
	<!-- An NX_INT32 item -->
	<xs:complexType name="int32DataType">
		<xs:simpleContent>
			<xs:extension base="nx:int32Data">
				<xs:attributeGroup ref="nx:standardDataAttributes" /> 
				<!-- xs:attribute name="name" use="prohibited" / -->
				<xs:attribute name="NAPItype" use="required" >
					<xs:simpleType>
						<xs:restriction base="nx:NAPITypes">
							<!--xs:pattern value="NX_INT32\[.*\]" /-->					
							<xs:pattern value="NX_INT32.*" />					
						</xs:restriction>
					</xs:simpleType>	
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	<!-- An NX_INT16 item -->
	<xs:complexType name="int16DataType">
		<xs:simpleContent>
			<xs:extension base="nx:int16Data">
				<xs:attributeGroup ref="nx:standardDataAttributes" /> 
				<!-- xs:attribute name="name" use="prohibited" / -->
				<xs:attribute name="NAPItype" use="required" >
					<xs:simpleType>
						<xs:restriction base="nx:NAPITypes">
							<!--xs:pattern value="NX_INT16\[.*\]" /-->					
							<xs:pattern value="NX_INT16.*" />					
						</xs:restriction>
					</xs:simpleType>	
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	<!-- An NX_INT8 item -->
	<xs:complexType name="int8DataType">
		<xs:simpleContent>
			<xs:extension base="nx:int8Data">
				<xs:attributeGroup ref="nx:standardDataAttributes" /> 
				<!-- xs:attribute name="name" use="prohibited" / -->
				<xs:attribute name="NAPItype" use="required" >
					<xs:simpleType>
						<xs:restriction base="nx:NAPITypes">
							<!--xs:pattern value="NX_INT8\[.*\]" /-->					
							<xs:pattern value="NX_INT8.*" />					
						</xs:restriction>
					</xs:simpleType>	
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	<!-- An NX_INT item -->
	<xs:complexType name="intDataType">
		<xs:simpleContent>
			<xs:extension base="nx:intData">
				<xs:attributeGroup ref="nx:standardDataAttributes" /> 
				<xs:attribute name="NAPItype" use="required" >
					<xs:simpleType>
						<xs:restriction base="nx:NAPITypes">
							<!--xs:pattern value="NX_INT64\[.*\]" /-->					
							<xs:pattern value="NX_INT(8|16|32|64).*" />					
						</xs:restriction>
					</xs:simpleType>	
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- An NX_CHAR item -->
	<xs:complexType name="charDataType">
		<xs:simpleContent>
			<xs:extension base="nx:charData">
				<xs:attributeGroup ref="nx:standardDataAttributes" /> 
				<!-- xs:attribute name="name" use="prohibited" / -->
				<xs:attribute name="NAPItype" use="required" >
					<xs:simpleType>
						<xs:restriction base="nx:NAPITypes">
							<!--xs:pattern value="NX_CHAR\[.*\]" /-->					
							<xs:pattern value="NX_CHAR.*" />					
						</xs:restriction>
					</xs:simpleType>	
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	<!-- An NX_CHAR item that holds an ISO8601 timestamp -->
	<xs:complexType name="ISO8601DataType">
		<xs:simpleContent>
			<xs:extension base="nx:charData">
				<xs:attributeGroup ref="nx:standardDataAttributes" /> 
				<!-- xs:attribute name="name" use="prohibited" / -->
				<xs:attribute name="NAPItype" use="required" >
					<xs:simpleType>
						<xs:restriction base="nx:NAPITypes">
							<!--xs:pattern value="NX_CHAR\[.*\]" /-->					
							<xs:pattern value="NX_CHAR.*" />					
						</xs:restriction>
					</xs:simpleType>	
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
<!--
	<xs:complexType name="floatLengthDataType">
		<xs:simpleContent>
			<xs:restriction base="nx:floatDataType">
				<xs:attribute name="units" use="required" type="nx:lengthUnit" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
		
	<xs:complexType name="floatWavelengthDataType">
		<xs:simpleContent>
			<xs:restriction base="nx:floatDataType">
				<xs:attribute name="units" use="required" type="nx:wavelengthUnit" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	
	
	<xs:complexType name="floatAngleDataType">
		<xs:simpleContent>
			<xs:restriction base="nx:floatDataType">
				<xs:attribute name="units" use="required" type="nx:angleUnit" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	
	<xs:complexType name="floatFrequencyDataType">
		<xs:simpleContent>
			<xs:restriction base="nx:floatDataType">
				<xs:attribute name="units" use="required" type="nx:frequencyUnit" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
-->	
	<!-- link -->
	<xs:complexType name="NAPIlinkType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="target" use="required" >   <!-- Could use key / keyref  to validate links -->
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="/.*" />					
						</xs:restriction>
					</xs:simpleType>	
				</xs:attribute>
				<xs:attribute name="name"  >   <!-- Could use key / keyref  to validate links -->
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value=".*" />					
						</xs:restriction>
					</xs:simpleType>	
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="classSuperBaseType">
		<xs:sequence maxOccurs="unbounded" >
			<xs:element  type="nx:NAPIlinkType" name="NAPIlink" minOccurs="0" />
		</xs:sequence>
		<xs:attributeGroup ref="nx:standardClassAttributes" />
		<!-- allow user defined attributes -->
		<xs:anyAttribute namespace="##any" processContents="lax" />
	</xs:complexType>
	
	<!-- attributes that may be on any NX* class -->
	<xs:attributeGroup name="standardClassAttributes">
		<xs:attribute name="name" type="nx:validName" use="required" />
	</xs:attributeGroup>
	

	<!-- base type for NX* classes -->
	<xs:complexType name="classBaseType">
		<xs:complexContent>
			<xs:restriction base="nx:classSuperBaseType">
				<xs:attribute name="NAPItype" use="prohibited" />
				<!-- allow user defined attributes -->
				<xs:anyAttribute namespace="##any" processContents="lax" />
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>


	<xs:complexType name="NXtranslationType">
		<xs:complexContent>
			<xs:extension base="nx:classBaseType">
			  <xs:sequence maxOccurs="unbounded">
				<xs:element type="nx:floatDataType" name="distances" minOccurs="0" />
			  	<xs:element type="nx:NXgeometryType" name="NXgeometry" minOccurs="0" />
			  </xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="NXorientationType">
		<xs:complexContent>
			<xs:extension base="nx:classBaseType">
			  <xs:sequence maxOccurs="unbounded">
				<xs:element type="nx:floatDataType" name="angles" minOccurs="0" />
			  	<xs:element type="nx:NXgeometryType" name="NXgeometry" minOccurs="0" />
			  </xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	
	<xs:complexType name="NXshapeType">
		<xs:complexContent>
			<xs:extension base="nx:classBaseType">
			  <xs:sequence maxOccurs="unbounded">
				<xs:element type="nx:validShape" name="shape" minOccurs="0" />
				<xs:element type="nx:float32DataType" name="size" minOccurs="0" />
			  </xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
		
	<xs:complexType name="NXgeometryType">
		<xs:complexContent>
			<xs:extension base="nx:classBaseType">
			  <xs:sequence maxOccurs="unbounded">
				<xs:element type="nx:NXshapeType" name="NXshape" minOccurs="0" />
				<xs:element type="nx:NXtranslationType" name="NXtranslation" minOccurs="0" />
				<xs:element type="nx:NXorientationType" name="NXorientation" minOccurs="0" />
				<xs:element type="nx:charDataType" name="description" minOccurs="0" />
			  </xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- an instrument component i.e. something that has a location, orientation etc. -->
	<xs:complexType name="componentType">
		<xs:annotation><xs:documentation>An instrument component i.e. something that has a location, orientation etc.</xs:documentation></xs:annotation>
		<xs:complexContent>
			<xs:extension base="nx:classBaseType">
			  <xs:sequence maxOccurs="unbounded">
				<xs:element type="nx:floatDataType" name="distance" minOccurs="0">
					<xs:annotation><xs:documentation>Flight path distance to object</xs:documentation></xs:annotation>
					
				</xs:element> 
				<xs:element type="nx:floatDataType" name="polar_angle" minOccurs="0">
					<xs:annotation><xs:documentation>Polar angle of object.</xs:documentation></xs:annotation>
					
				</xs:element>
				<xs:element type="nx:floatDataType" name="azimuthal_angle" minOccurs="0">
					<xs:annotation><xs:documentation>Azimuthal angle of object.</xs:documentation></xs:annotation>
					
				</xs:element> 
				<xs:element type="nx:NXgeometryType" name="geometry" minOccurs="0">
					<xs:annotation><xs:documentation>Geometry information of object</xs:documentation></xs:annotation>
					
				</xs:element> 
			  </xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

</xs:schema>
